{"remainingRequest":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js!E:\\QuanLyDaoTao\\Front-end\\src\\app\\scenes\\enhancers\\withAuthentication.js","dependencies":[{"path":"E:\\QuanLyDaoTao\\Front-end\\src\\app\\scenes\\enhancers\\withAuthentication.js","mtime":1555151466154},{"path":"E:\\QuanLyDaoTao\\Front-end\\.babelrc","mtime":1554785266000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nvar withAuthentication = function withAuthentication(WrappedComponent) {\n  // const WithAuthentication = ( props ) => {\n  //     if ( !props.isAuthenticated ) {\n  //         return <Redirect to=\"/login\" />;\n  //     }\n  //     return ( <WrappedComponent { ...props } /> );\n  // };\n  console.log(props.isAuthenticated);\n  WithAuthentication.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.session.sessionReducer\n  };\n};\n\nexport default connect(mapStateToProps, null)(withAuthentication);",{"version":3,"sources":["E:\\QuanLyDaoTao\\Front-end\\src\\app\\scenes\\enhancers\\withAuthentication.js"],"names":["React","PropTypes","connect","Redirect","withAuthentication","WrappedComponent","console","log","props","isAuthenticated","WithAuthentication","propTypes","bool","isRequired","mapStateToProps","state","session","sessionReducer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAEC,gBAAF,EAAwB;AAC/C;AAEA;AACA;AACA;AAEA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,eAAlB;AACAC,EAAAA,kBAAkB,CAACC,SAAnB,GAA+B;AAC3BF,IAAAA,eAAe,EAAER,SAAS,CAACW,IAAV,CAAeC;AADL,GAA/B;AAIH,CAdD;;AAgBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BN,IAAAA,eAAe,EAAEM,KAAK,CAACC,OAAN,CAAcC;AADD,GAAL;AAAA,CAA7B;;AAIA,eAAef,OAAO,CAACY,eAAD,EAAkB,IAAlB,CAAP,CAAgCV,kBAAhC,CAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst withAuthentication = ( WrappedComponent ) => {\r\n    // const WithAuthentication = ( props ) => {\r\n        \r\n    //     if ( !props.isAuthenticated ) {\r\n    //         return <Redirect to=\"/login\" />;\r\n    //     }\r\n\r\n    //     return ( <WrappedComponent { ...props } /> );\r\n    // };\r\n    console.log(props.isAuthenticated);\r\n    WithAuthentication.propTypes = {\r\n        isAuthenticated: PropTypes.bool.isRequired,\r\n    };\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.session.sessionReducer,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)( withAuthentication );"]}]}