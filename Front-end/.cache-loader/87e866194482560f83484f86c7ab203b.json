{"remainingRequest":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js!E:\\QuanLyDaoTao\\Front-end\\node_modules\\@emotion\\serialize\\dist\\serialize.esm.js","dependencies":[{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\@emotion\\serialize\\dist\\serialize.esm.js","mtime":499162500000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\nvar processStyleName = memoize(function (styleName) {\n  return styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  if (value == null || typeof value === 'boolean') {\n    return '';\n  }\n\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        value = value.replace(animationRegex, function (match, p1, p2) {\n          styles = p2 + styles;\n          return p1;\n        });\n      }\n  }\n\n  if (unitless[key] !== 1 && key.charCodeAt(1) !== 45 && // custom properties\n  !isNaN(value) && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    return oldProcessStyleValue(key, value);\n  };\n}\n\nfunction handleInterpolation(mergedProps, registered, interpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          styles = interpolation.styles + styles;\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          return interpolation.styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          return handleInterpolation(mergedProps, registered, // $FlowFixMe\n          interpolation(mergedProps));\n        }\n      }\n    // eslint-disable-next-line no-fallthrough\n\n    default:\n      {\n        var cached = registered[interpolation];\n        return cached !== undefined ? cached : interpolation;\n      }\n  }\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i]);\n    }\n  } else {\n    var _loop = function _loop(_key) {\n      if (typeof obj[_key] !== 'object') {\n        string += processStyleName(_key) + \":\" + processStyleValue(_key, obj[_key]) + \";\";\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with @emotion/babel-plugin-core.');\n        }\n\n        if (Array.isArray(obj[_key]) && typeof obj[_key][0] === 'string' && registered[obj[_key][0]] === undefined) {\n          obj[_key].forEach(function (value) {\n            string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n          });\n        } else {\n          string += _key + \"{\" + handleInterpolation(mergedProps, registered, obj[_key]) + \"}\";\n        }\n      }\n    };\n\n    for (var _key in obj) {\n      _loop(_key);\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g; // this is set to an empty string on each serializeStyles call\n// it's declared in the module scope since we need to add to\n// it in the middle of serialization to add styles from keyframes\n\nvar styles = '';\n\nvar serializeStyles = function serializeStyles(registered, args, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  styles = '';\n  var identifierName = '';\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false; // we have to store this in a variable and then append it to styles since\n    // styles could be modified in handleInterpolation and using += would mean\n    // it would append the return value of handleInterpolation to the value before handleInterpolation is called\n\n    var stringifiedInterpolation = handleInterpolation(mergedProps, registered, strings);\n    styles += stringifiedInterpolation;\n  } else {\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    // we have to store this in a variable and then append it to styles since\n    // styles could be modified in handleInterpolation and using += would mean\n    // it would append the return value of handleInterpolation to the value before handleInterpolation is called\n    var _stringifiedInterpolation = handleInterpolation(mergedProps, registered, args[i]);\n\n    styles += _stringifiedInterpolation;\n\n    if (stringMode) {\n      styles += strings[i];\n    }\n  }\n\n  styles = styles.replace(labelPattern, function (match, p1) {\n    identifierName += \"-\" + p1;\n    return '';\n  });\n  var name = hashString(styles) + identifierName;\n  return {\n    name: name,\n    styles: styles\n  };\n};\n\nexport { serializeStyles };",{"version":3,"sources":["E:\\QuanLyDaoTao\\Front-end\\node_modules\\@emotion\\serialize\\dist\\serialize.esm.js"],"names":["hashString","unitless","memoize","hyphenateRegex","animationRegex","processStyleName","styleName","replace","toLowerCase","processStyleValue","key","value","match","p1","p2","styles","charCodeAt","isNaN","process","env","NODE_ENV","contentValuePattern","contentValues","oldProcessStyleValue","indexOf","test","charAt","length","console","error","handleInterpolation","mergedProps","registered","interpolation","__emotion_styles","undefined","toString","Error","anim","name","createStringFromObject","cached","obj","string","Array","isArray","i","_loop","_key","forEach","labelPattern","serializeStyles","args","stringMode","identifierName","strings","raw","stringifiedInterpolation","_stringifiedInterpolation"],"mappings":"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","sourcesContent":["import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\nvar processStyleName = memoize(function (styleName) {\n  return styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  if (value == null || typeof value === 'boolean') {\n    return '';\n  }\n\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        value = value.replace(animationRegex, function (match, p1, p2) {\n          styles = p2 + styles;\n          return p1;\n        });\n      }\n  }\n\n  if (unitless[key] !== 1 && key.charCodeAt(1) !== 45 && // custom properties\n  !isNaN(value) && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    return oldProcessStyleValue(key, value);\n  };\n}\n\nfunction handleInterpolation(mergedProps, registered, interpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          styles = interpolation.styles + styles;\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          return interpolation.styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          return handleInterpolation(mergedProps, registered, // $FlowFixMe\n          interpolation(mergedProps));\n        }\n      }\n    // eslint-disable-next-line no-fallthrough\n\n    default:\n      {\n        var cached = registered[interpolation];\n        return cached !== undefined ? cached : interpolation;\n      }\n  }\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i]);\n    }\n  } else {\n    var _loop = function _loop(_key) {\n      if (typeof obj[_key] !== 'object') {\n        string += processStyleName(_key) + \":\" + processStyleValue(_key, obj[_key]) + \";\";\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with @emotion/babel-plugin-core.');\n        }\n\n        if (Array.isArray(obj[_key]) && typeof obj[_key][0] === 'string' && registered[obj[_key][0]] === undefined) {\n          obj[_key].forEach(function (value) {\n            string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n          });\n        } else {\n          string += _key + \"{\" + handleInterpolation(mergedProps, registered, obj[_key]) + \"}\";\n        }\n      }\n    };\n\n    for (var _key in obj) {\n      _loop(_key);\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g; // this is set to an empty string on each serializeStyles call\n// it's declared in the module scope since we need to add to\n// it in the middle of serialization to add styles from keyframes\n\nvar styles = '';\nvar serializeStyles = function serializeStyles(registered, args, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  styles = '';\n  var identifierName = '';\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false; // we have to store this in a variable and then append it to styles since\n    // styles could be modified in handleInterpolation and using += would mean\n    // it would append the return value of handleInterpolation to the value before handleInterpolation is called\n\n    var stringifiedInterpolation = handleInterpolation(mergedProps, registered, strings);\n    styles += stringifiedInterpolation;\n  } else {\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    // we have to store this in a variable and then append it to styles since\n    // styles could be modified in handleInterpolation and using += would mean\n    // it would append the return value of handleInterpolation to the value before handleInterpolation is called\n    var _stringifiedInterpolation = handleInterpolation(mergedProps, registered, args[i]);\n\n    styles += _stringifiedInterpolation;\n\n    if (stringMode) {\n      styles += strings[i];\n    }\n  }\n\n  styles = styles.replace(labelPattern, function (match, p1) {\n    identifierName += \"-\" + p1;\n    return '';\n  });\n  var name = hashString(styles) + identifierName;\n  return {\n    name: name,\n    styles: styles\n  };\n};\n\nexport { serializeStyles };\n"]}]}