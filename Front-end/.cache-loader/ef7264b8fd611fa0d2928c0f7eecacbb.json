{"remainingRequest":"e:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js!e:\\QuanLyDaoTao\\Front-end\\src\\app\\scenes\\pages\\ManageAccount\\ManageAccount.jsx","dependencies":[{"path":"e:\\QuanLyDaoTao\\Front-end\\src\\app\\scenes\\pages\\ManageAccount\\ManageAccount.jsx","mtime":1556308635901},{"path":"e:\\QuanLyDaoTao\\Front-end\\.babelrc","mtime":1554785266000},{"path":"e:\\QuanLyDaoTao\\Front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"e:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from 'react';\nimport styles from './styles.css';\nimport DocumentTitle from 'react-document-title';\nimport PropTypes from 'prop-types';\nimport { EnhancedTable } from '../../components/EnhancedTable';\nimport { ButtonAdd } from '../../components/ButtonAdd';\nimport { connect } from 'react-redux';\nimport { accountShape } from '../../propTypes';\nimport { accountOperations } from '../../../state/ducks/account';\nimport { tableOperations } from '../../../state/ducks/table';\n\nvar ManageAccount =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ManageAccount, _Component);\n\n  function ManageAccount(props) {\n    var _this;\n\n    _classCallCheck(this, ManageAccount);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ManageAccount).call(this, props));\n    _this.state = {\n      rows: [{\n        id: 'imageUrl',\n        numeric: false,\n        disablePadding: false,\n        label: 'Avatar'\n      }, {\n        id: 'firstName',\n        numeric: false,\n        disablePadding: false,\n        label: 'Họ'\n      }, {\n        id: 'lastName',\n        numeric: false,\n        disablePadding: false,\n        label: 'Tên'\n      }, {\n        id: 'login',\n        numeric: false,\n        disablePadding: false,\n        label: 'Mã đăng nhập'\n      }, {\n        id: 'email',\n        numeric: false,\n        disablePadding: false,\n        label: 'Email'\n      }, {\n        id: 'phone_number',\n        numeric: false,\n        disablePadding: false,\n        label: 'Số điện thoại'\n      }, {\n        id: 'authorities',\n        numeric: false,\n        disablePadding: false,\n        label: 'Loại tài khoản'\n      }, {\n        id: 'activated',\n        numeric: false,\n        disablePadding: false,\n        label: 'Trạng thái'\n      }, {\n        id: 'xxx',\n        numeric: false,\n        disablePadding: false,\n        label: 'Tác vụ'\n      }],\n      cells: ['imageUrl', 'firstName', 'lastName', 'login', 'email', 'phone_number', 'authorities', 'activated']\n    };\n    return _this;\n  }\n\n  _createClass(ManageAccount, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.setRows(this.state.rows);\n      var accounts = this.props.accounts;\n\n      if (accounts.length === 0) {\n        this.props.getAllUserAccount();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var accounts = this.props.accounts;\n      return React.createElement(DocumentTitle, {\n        title: \".:Qu\\u1EA3n l\\xFD t\\xE0i kho\\u1EA3n:.\"\n      }, React.createElement(\"div\", {\n        className: \"\".concat(styles.mainManageAccount)\n      }, React.createElement(EnhancedTable, {\n        listName: \"Danh s\\xE1ch t\\xE0i kho\\u1EA3n\",\n        datas: accounts,\n        cells: this.state.cells\n      }), React.createElement(\"div\", {\n        className: \"\".concat(styles.fixed)\n      }, React.createElement(ButtonAdd, null))));\n    }\n  }]);\n\n  return ManageAccount;\n}(Component);\n\nManageAccount.PropTypes = {\n  accounts: PropTypes.arrayOf(accountShape).isRequired,\n  getAllUserAccount: PropTypes.func.isRequired,\n  setRows: PropTypes.func.isRequired\n};\nManageAccount.defaultProps = {\n  accounts: []\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    accounts: state.account.accounts\n  };\n};\n\nvar mapDispatchToProps = {\n  getAllUserAccount: accountOperations.getAllUserAccount,\n  setRows: tableOperations.setRows\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageAccount);",{"version":3,"sources":["e:\\QuanLyDaoTao\\Front-end\\src\\app\\scenes\\pages\\ManageAccount\\ManageAccount.jsx"],"names":["React","Component","styles","DocumentTitle","PropTypes","EnhancedTable","ButtonAdd","connect","accountShape","accountOperations","tableOperations","ManageAccount","props","state","rows","id","numeric","disablePadding","label","cells","setRows","accounts","length","getAllUserAccount","mainManageAccount","fixed","arrayOf","isRequired","func","defaultProps","mapStateToProps","account","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport styles from './styles.css';\r\nimport DocumentTitle from 'react-document-title';\r\nimport PropTypes from 'prop-types';\r\nimport { EnhancedTable } from '../../components/EnhancedTable';\r\nimport { ButtonAdd } from '../../components/ButtonAdd';\r\nimport { connect } from 'react-redux';\r\nimport { accountShape } from '../../propTypes';\r\nimport { accountOperations } from '../../../state/ducks/account';\r\nimport { tableOperations } from '../../../state/ducks/table';\r\n\r\n\r\nclass ManageAccount extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rows: [\r\n                { id: 'imageUrl', numeric: false, disablePadding: false, label: 'Avatar' },\r\n                { id: 'firstName', numeric: false, disablePadding: false, label: 'Họ' },\r\n                { id: 'lastName', numeric: false, disablePadding: false, label: 'Tên' },\r\n                { id: 'login', numeric: false, disablePadding: false, label: 'Mã đăng nhập' },\r\n                { id: 'email', numeric: false, disablePadding: false, label: 'Email' },\r\n                { id: 'phone_number', numeric: false, disablePadding: false, label: 'Số điện thoại' },\r\n                { id: 'authorities', numeric: false, disablePadding: false, label: 'Loại tài khoản' },\r\n                { id: 'activated', numeric: false, disablePadding: false, label: 'Trạng thái' },\r\n                { id: 'xxx', numeric: false, disablePadding: false, label: 'Tác vụ' },\r\n            ],\r\n            cells: [\r\n                'imageUrl',\r\n                'firstName',\r\n                'lastName',\r\n                'login',\r\n                'email',\r\n                'phone_number',\r\n                'authorities',\r\n                'activated'                                                    \r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setRows(this.state.rows);\r\n        const { accounts } = this.props;\r\n        if (accounts.length === 0) {\r\n            this.props.getAllUserAccount();\r\n        }\r\n    }\r\n    render() {\r\n        const { accounts } = this.props;\r\n        return (\r\n            <DocumentTitle title='.:Quản lý tài khoản:.'>\r\n                <div className={`${styles.mainManageAccount}`}>\r\n                    <EnhancedTable listName=\"Danh sách tài khoản\" datas={accounts} cells={this.state.cells}/>\r\n                    <div className={`${styles.fixed}`}>\r\n                        <ButtonAdd />\r\n                    </div>\r\n                </div>\r\n            </DocumentTitle>\r\n        );\r\n    }\r\n}\r\n\r\nManageAccount.PropTypes = {\r\n    accounts: PropTypes.arrayOf(accountShape).isRequired,\r\n    getAllUserAccount: PropTypes.func.isRequired,\r\n    setRows: PropTypes.func.isRequired\r\n}\r\n\r\nManageAccount.defaultProps = {\r\n    accounts: []\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    accounts: state.account.accounts\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getAllUserAccount: accountOperations.getAllUserAccount,\r\n    setRows: tableOperations.setRows,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageAccount);\r\n"]}]}