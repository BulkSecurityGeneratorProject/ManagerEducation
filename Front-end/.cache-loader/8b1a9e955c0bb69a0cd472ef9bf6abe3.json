{"remainingRequest":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js!E:\\QuanLyDaoTao\\Front-end\\src\\app\\scenes\\pages\\ManageAccount\\TabBars\\components\\EnhancedTableAccount\\EnhancedTableAccount.jsx","dependencies":[{"path":"E:\\QuanLyDaoTao\\Front-end\\src\\app\\scenes\\pages\\ManageAccount\\TabBars\\components\\EnhancedTableAccount\\EnhancedTableAccount.jsx","mtime":1558607631924},{"path":"E:\\QuanLyDaoTao\\Front-end\\.babelrc","mtime":1554785266000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport { connect } from 'react-redux';\nimport noavatar from './images/no_avatar.jpg';\nimport { accountShape } from '../../../../../propTypes';\nimport { accountOperations } from '../../../../../../state/ducks/account';\nimport { EnhancedTableHead } from '../../../../../components/EnhancedTableHead';\nimport { EnhancedTableToolBar } from '../../../../../components/EnhancedTableToolBar';\nimport { ImageAvatars } from '../../../../../components/ImageAvatars';\nimport Skeleton from 'react-loading-skeleton';\nimport LazyLoad from 'react-lazyload';\nimport { PopupFormEdit } from '../../../../../components/Popup/PopupFormEdit';\nvar rows = [{\n  id: 'imageUrl',\n  numeric: false,\n  disablePadding: false,\n  label: 'Avatar'\n}, {\n  id: 'firstName',\n  numeric: false,\n  disablePadding: false,\n  label: 'Họ'\n}, {\n  id: 'lastName',\n  numeric: false,\n  disablePadding: false,\n  label: 'Tên'\n}, {\n  id: 'login',\n  numeric: false,\n  disablePadding: false,\n  label: 'Mã đăng nhập'\n}, {\n  id: 'email',\n  numeric: false,\n  disablePadding: false,\n  label: 'Email'\n}, {\n  id: 'phone_number',\n  numeric: false,\n  disablePadding: false,\n  label: 'Số điện thoại'\n}, {\n  id: 'authorities',\n  numeric: false,\n  disablePadding: false,\n  label: 'Loại tài khoản'\n}, {\n  id: 'activated',\n  numeric: false,\n  disablePadding: false,\n  label: 'Trạng thái'\n}, {\n  id: 'dateSigned',\n  numeric: false,\n  disablePadding: false,\n  label: 'Ngày đăng ký'\n}, {\n  id: 'edit',\n  numeric: false,\n  disablePadding: false,\n  label: 'Tác vụ'\n}];\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  var stabilizedThis = array.map(function (el, index) {\n    return [el, index];\n  });\n  stabilizedThis.sort(function (a, b) {\n    var order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(function (el) {\n    return el[0];\n  });\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? function (a, b) {\n    return desc(a, b, orderBy);\n  } : function (a, b) {\n    return -desc(a, b, orderBy);\n  };\n}\n\nvar style = function style(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3\n    },\n    table: {\n      minWidth: 1020\n    },\n    tableWrapper: {\n      overflowX: 'auto'\n    },\n    chip: {\n      margin: theme.spacing.unit,\n      backgroundColor: '#455e6b'\n    }\n  };\n};\n\nvar EnhancedTableAccount =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EnhancedTableAccount, _React$Component);\n\n  function EnhancedTableAccount(props) {\n    var _this;\n\n    _classCallCheck(this, EnhancedTableAccount);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EnhancedTableAccount).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRequestSort\", function (event, property) {\n      var orderBy = property;\n      var order = 'desc';\n\n      if (_this.state.orderBy === property && _this.state.order === 'desc') {\n        order = 'asc';\n      }\n\n      _this.setState({\n        order: order,\n        orderBy: orderBy\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelectAllClick\", function (event) {\n      if (event.target.checked) {\n        _this.setState({\n          selected: _this.props.accounts.map(function (n) {\n            return n.id;\n          })\n        });\n\n        return;\n      }\n\n      _this.setState({\n        selected: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (event, id) {\n      var selected = _this.state.selected;\n      var selectedIndex = selected.indexOf(id);\n      var newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      _this.setState({\n        selected: newSelected\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChangePage\", function (event, page) {\n      _this.setState({\n        page: page\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOpenForm\", function (id) {\n      _this.props.findAccountById(id);\n\n      _this.props.openForm();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChangeRowsPerPage\", function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDelete\", function (param) {\n      _this.props.deleteUserAccount(_this.state.selected);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isSelected\", function (id) {\n      return _this.state.selected.indexOf(id) !== -1;\n    });\n\n    _this.state = {\n      order: 'asc',\n      orderBy: 'calories',\n      selected: [],\n      page: 0,\n      rowsPerPage: 10\n    };\n    return _this;\n  }\n\n  _createClass(EnhancedTableAccount, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getAllUserAccount();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          listName = _this$props.listName,\n          accounts = _this$props.accounts,\n          accountById = _this$props.accountById;\n      var _this$state = this.state,\n          order = _this$state.order,\n          orderBy = _this$state.orderBy,\n          selected = _this$state.selected,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page;\n      return React.createElement(Paper, {\n        className: classes.root\n      }, accountById.id ? React.createElement(PopupFormEdit, {\n        data: accountById\n      }) : '', React.createElement(EnhancedTableToolBar, {\n        numSelected: selected.length,\n        listName: listName,\n        actionDelete: this.handleDelete\n      }), React.createElement(\"hr\", {\n        className: \"tall\"\n      }), React.createElement(\"div\", {\n        className: classes.tableWrapper\n      }, React.createElement(Table, {\n        className: classes.table,\n        \"aria-labelledby\": \"tableTitle\"\n      }, React.createElement(EnhancedTableHead, {\n        numSelected: selected.length,\n        order: order,\n        orderBy: orderBy,\n        onSelectAllClick: this.handleSelectAllClick,\n        onRequestSort: this.handleRequestSort,\n        rowCount: accounts.length,\n        rows: rows\n      }), React.createElement(TableBody, null, stableSort(accounts, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (n) {\n        var isSelected = _this2.isSelected(n.id);\n\n        return React.createElement(LazyLoad, null, React.createElement(TableRow, {\n          hover: true,\n          role: \"checkbox\",\n          \"aria-checked\": isSelected,\n          tabIndex: -1,\n          key: n.id,\n          selected: isSelected\n        }, React.createElement(TableCell, {\n          padding: \"checkbox\",\n          onClick: function onClick(event) {\n            return _this2.handleClick(event, n.id);\n          }\n        }, React.createElement(Checkbox, {\n          checked: isSelected,\n          color: \"default\"\n        })), React.createElement(TableCell, {\n          className: \"cell\"\n        }, React.createElement(LazyLoad, {\n          height: 60\n        }, React.createElement(ImageAvatars, {\n          url: n.imageUrl !== '' ? \"http://localhost:8080/api/file/avatar/\".concat(n.imageUrl) : noavatar\n        }))), React.createElement(TableCell, {\n          className: \"cell\"\n        }, React.createElement(\"b\", null, n.firstName || React.createElement(Skeleton, null))), React.createElement(TableCell, {\n          className: \"cell\"\n        }, React.createElement(\"b\", null, n.lastName || React.createElement(Skeleton, null))), React.createElement(TableCell, {\n          className: \"cell\"\n        }, n.login || React.createElement(Skeleton, null)), React.createElement(TableCell, {\n          className: \"cell\"\n        }, n.email || React.createElement(Skeleton, null)), React.createElement(TableCell, {\n          className: \"cell\"\n        }, n.phoneNumber || React.createElement(Skeleton, null)), React.createElement(TableCell, {\n          className: \"cell\"\n        }, n.authorities.toString() === '' ? React.createElement(Skeleton, null) : \"\\n                                                    \".concat(n.authorities.toString() === 'ROLE_ADMIN' ? 'ADMIN' : '', \"\\n                                                    \").concat(n.authorities.toString() === 'ROLE_TEACHER' ? 'GIẢNG VIÊN' : '', \"\\n                                                    \").concat(n.authorities.toString() === 'ROLE_PARENTS' ? 'PHỤ HUYNH' : '', \"\\n                                                    \").concat(n.authorities.toString() === 'ROLE_STUDENT' ? 'HỌC VIÊN' : '', \"\\n                                                \")), React.createElement(TableCell, {\n          className: \"cell\"\n        }, n.activated ? React.createElement(Chip, {\n          icon: React.createElement(CheckCircleIcon, null),\n          label: \"\\u0110\\xE3 k\\xEDch ho\\u1EA1t\",\n          color: \"primary\",\n          className: classes.chip,\n          title: \"\\u0110\\xE3 k\\xEDch ho\\u1EA1t\"\n        }) : React.createElement(Chip, {\n          icon: React.createElement(RemoveCircleIcon, null),\n          label: \"Ch\\u01B0a k\\xEDch ho\\u1EA1t\",\n          color: \"inherit\",\n          title: \"Ch\\u01B0a k\\xEDch ho\\u1EA1t\"\n        })), React.createElement(TableCell, {\n          className: \"cell\"\n        }, React.createElement(Button, {\n          className: \"btn\",\n          onClick: function onClick() {\n            return _this2.handleOpenForm(n.id);\n          },\n          variant: \"contained\",\n          style: {\n            backgroundColor: '#17b304',\n            color: '#fff',\n            minWidth: 0,\n            padding: '5px'\n          },\n          title: \"Ch\\u1EC9nh s\\u1EEDa th\\xF4ng tin t\\xE0i kho\\u1EA3n\"\n        }, React.createElement(LaunchIcon, null)))));\n      }), accounts.length <= 0 && React.createElement(TableRow, null, React.createElement(TableCell, {\n        colSpan: 10\n      }, React.createElement(Skeleton, {\n        count: 10,\n        height: 60,\n        duration: 2\n      })))))), React.createElement(TablePagination, {\n        rowsPerPageOptions: [10, 15, 25, 50, 75, 100],\n        component: \"div\",\n        count: accounts.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          'aria-label': 'Previous Page'\n        },\n        nextIconButtonProps: {\n          'aria-label': 'Next Page'\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.handleChangeRowsPerPage\n      }));\n    }\n  }]);\n\n  return EnhancedTableAccount;\n}(React.Component);\n\nEnhancedTableAccount.propTypes = {\n  classes: PropTypes.object.isRequired,\n  listName: PropTypes.string.isRequired,\n  accounts: PropTypes.arrayOf(accountShape).isRequired,\n  getAllUserAccount: PropTypes.func.isRequired,\n  openForm: PropTypes.func.isRequired,\n  findAccountById: PropTypes.func.isRequired,\n  deleteUserAccount: PropTypes.func.isRequired\n};\nEnhancedTableAccount.defaultProps = {\n  accounts: []\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    accounts: state.account.accounts,\n    accountById: state.account.getAccounts\n  };\n};\n\nvar mapDispatchToProps = {\n  getAllUserAccount: accountOperations.getAllUserAccount,\n  openForm: accountOperations.openFormEdit,\n  findAccountById: accountOperations.getUserAccountById,\n  deleteUserAccount: accountOperations.deleteUserAccount\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(EnhancedTableAccount));",{"version":3,"sources":["E:\\QuanLyDaoTao\\Front-end\\src\\app\\scenes\\pages\\ManageAccount\\TabBars\\components\\EnhancedTableAccount\\EnhancedTableAccount.jsx"],"names":["React","PropTypes","withStyles","Table","TableBody","TableCell","TablePagination","TableRow","Paper","Button","LaunchIcon","Checkbox","Chip","CheckCircleIcon","RemoveCircleIcon","connect","noavatar","accountShape","accountOperations","EnhancedTableHead","EnhancedTableToolBar","ImageAvatars","Skeleton","LazyLoad","PopupFormEdit","rows","id","numeric","disablePadding","label","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","style","theme","root","width","marginTop","spacing","unit","table","minWidth","tableWrapper","overflowX","chip","margin","backgroundColor","EnhancedTableAccount","props","event","property","state","setState","target","checked","selected","accounts","n","selectedIndex","indexOf","newSelected","concat","slice","length","page","findAccountById","openForm","rowsPerPage","value","param","deleteUserAccount","getAllUserAccount","classes","listName","accountById","handleDelete","handleSelectAllClick","handleRequestSort","isSelected","handleClick","imageUrl","firstName","lastName","login","email","phoneNumber","authorities","toString","activated","handleOpenForm","color","padding","handleChangePage","handleChangeRowsPerPage","Component","propTypes","object","isRequired","string","arrayOf","func","defaultProps","mapStateToProps","account","getAccounts","mapDispatchToProps","openFormEdit","getUserAccountById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport { connect } from 'react-redux';\r\nimport noavatar from './images/no_avatar.jpg';\r\nimport { accountShape } from '../../../../../propTypes';\r\nimport { accountOperations } from '../../../../../../state/ducks/account';\r\nimport { EnhancedTableHead } from '../../../../../components/EnhancedTableHead';\r\nimport { EnhancedTableToolBar } from '../../../../../components/EnhancedTableToolBar';\r\nimport { ImageAvatars } from '../../../../../components/ImageAvatars';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport LazyLoad from 'react-lazyload';\r\nimport { PopupFormEdit } from '../../../../../components/Popup/PopupFormEdit';\r\n\r\nconst rows = [\r\n    { id: 'imageUrl', numeric: false, disablePadding: false, label: 'Avatar' },\r\n    { id: 'firstName', numeric: false, disablePadding: false, label: 'Họ' },\r\n    { id: 'lastName', numeric: false, disablePadding: false, label: 'Tên' },\r\n    { id: 'login', numeric: false, disablePadding: false, label: 'Mã đăng nhập' },\r\n    { id: 'email', numeric: false, disablePadding: false, label: 'Email' },\r\n    { id: 'phone_number', numeric: false, disablePadding: false, label: 'Số điện thoại' },\r\n    { id: 'authorities', numeric: false, disablePadding: false, label: 'Loại tài khoản' },\r\n    { id: 'activated', numeric: false, disablePadding: false, label: 'Trạng thái' },\r\n    { id: 'dateSigned', numeric: false, disablePadding: false, label: 'Ngày đăng ký' },\r\n    { id: 'edit', numeric: false, disablePadding: false, label: 'Tác vụ' }\r\n]\r\n\r\nfunction desc(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = cmp(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst style = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n    },\r\n    table: {\r\n        minWidth: 1020,\r\n    },\r\n    tableWrapper: {\r\n        overflowX: 'auto',\r\n    },\r\n    chip: {\r\n        margin: theme.spacing.unit,\r\n        backgroundColor: '#455e6b'\r\n    },\r\n});\r\n\r\nclass EnhancedTableAccount extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            order: 'asc',\r\n            orderBy: 'calories',\r\n            selected: [],\r\n            page: 0,\r\n            rowsPerPage: 10\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAllUserAccount();\r\n    }\r\n\r\n    handleRequestSort = (event, property) => {\r\n        const orderBy = property;\r\n        let order = 'desc';\r\n\r\n        if (this.state.orderBy === property && this.state.order === 'desc') {\r\n            order = 'asc';\r\n        }\r\n\r\n        this.setState({ order, orderBy });\r\n    };\r\n\r\n    handleSelectAllClick = event => {\r\n        if (event.target.checked) {\r\n            this.setState({ selected: this.props.accounts.map(n => n.id) });\r\n            return;\r\n        }\r\n        this.setState({ selected: [] });\r\n    };\r\n\r\n    handleClick = (event, id) => {\r\n        const { selected } = this.state;\r\n        const selectedIndex = selected.indexOf(id);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, id);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        this.setState({ selected: newSelected });\r\n    };\r\n\r\n    handleChangePage = (event, page) => {\r\n        this.setState({ page });\r\n    };\r\n\r\n    handleOpenForm = (id) => {\r\n        this.props.findAccountById(id);\r\n        this.props.openForm();\r\n    }\r\n\r\n    handleChangeRowsPerPage = event => {\r\n        this.setState({ rowsPerPage: event.target.value });\r\n    };\r\n\r\n    handleDelete = (param) => {\r\n        this.props.deleteUserAccount(this.state.selected);\r\n    }\r\n\r\n    isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n\r\n    render() {\r\n        const { classes, listName, accounts, accountById } = this.props;\r\n        const { order, orderBy, selected, rowsPerPage, page } = this.state;\r\n        return (\r\n            <Paper className={classes.root}>\r\n                 {accountById.id ? <PopupFormEdit data={accountById}/> : ''}\r\n                <EnhancedTableToolBar numSelected={selected.length} listName={listName} actionDelete={this.handleDelete}/>\r\n                <hr className=\"tall\" />\r\n                <div className={classes.tableWrapper}>\r\n                    <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n                        <EnhancedTableHead\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={this.handleSelectAllClick}\r\n                            onRequestSort={this.handleRequestSort}\r\n                            rowCount={accounts.length}\r\n                            rows={rows}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(accounts, getSorting(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map(n => {\r\n                                    const isSelected = this.isSelected(n.id);\r\n                                    return (\r\n                                        <LazyLoad>\r\n                                            <TableRow\r\n                                                hover\r\n                                                role=\"checkbox\"\r\n                                                aria-checked={isSelected}\r\n                                                tabIndex={-1}\r\n                                                key={n.id}\r\n                                                selected={isSelected}\r\n                                            >\r\n                                                <TableCell padding=\"checkbox\" onClick={event => this.handleClick(event, n.id)}>\r\n                                                    <Checkbox checked={isSelected} color=\"default\" />\r\n                                                </TableCell>\r\n                                                <TableCell className=\"cell\">\r\n                                                    <LazyLoad height={60}>\r\n                                                        <ImageAvatars url={n.imageUrl !== '' ? `http://localhost:8080/api/file/avatar/${n.imageUrl}` : noavatar} />\r\n                                                    </LazyLoad>\r\n                                                </TableCell>\r\n                                                <TableCell className=\"cell\">\r\n                                                    <b>{n.firstName || <Skeleton />}</b>\r\n                                                </TableCell>\r\n                                                <TableCell className=\"cell\">\r\n                                                    <b>{n.lastName || <Skeleton />}</b>\r\n                                                </TableCell>\r\n                                                <TableCell className=\"cell\">\r\n                                                    {n.login || <Skeleton />}\r\n                                                </TableCell>\r\n                                                <TableCell className=\"cell\">\r\n                                                    {n.email || <Skeleton />}\r\n                                                </TableCell>\r\n                                                <TableCell className=\"cell\">\r\n                                                    {n.phoneNumber || <Skeleton />}\r\n                                                </TableCell>\r\n                                                <TableCell className=\"cell\">\r\n                                                    {n.authorities.toString() === '' ? (<Skeleton />) : `\r\n                                                    ${n.authorities.toString() === 'ROLE_ADMIN' ? 'ADMIN' : ''}\r\n                                                    ${n.authorities.toString() === 'ROLE_TEACHER' ? 'GIẢNG VIÊN' : ''}\r\n                                                    ${n.authorities.toString() === 'ROLE_PARENTS' ? 'PHỤ HUYNH' : ''}\r\n                                                    ${n.authorities.toString() === 'ROLE_STUDENT' ? 'HỌC VIÊN' : ''}\r\n                                                `}\r\n                                                </TableCell>\r\n                                                <TableCell className=\"cell\">\r\n                                                    {n.activated ? <Chip\r\n                                                        icon={<CheckCircleIcon />}\r\n                                                        label=\"Đã kích hoạt\"\r\n                                                        color=\"primary\"\r\n                                                        className={classes.chip}\r\n                                                        title=\"Đã kích hoạt\"\r\n                                                    /> : <Chip\r\n                                                            icon={<RemoveCircleIcon />}\r\n                                                            label=\"Chưa kích hoạt\"\r\n                                                            color=\"inherit\"\r\n                                                            title=\"Chưa kích hoạt\"\r\n                                                        />}\r\n                                                </TableCell>\r\n                                                <TableCell className=\"cell\">\r\n                                                    <Button className=\"btn\" onClick={() => this.handleOpenForm(n.id)} variant=\"contained\" style={{ backgroundColor: '#17b304', color: '#fff', minWidth: 0, padding: '5px' }} \r\n                                                            title=\"Chỉnh sửa thông tin tài khoản\">\r\n                                                        <LaunchIcon />\r\n                                                    </Button>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </LazyLoad>\r\n                                    );\r\n                                })}\r\n                            {accounts.length <= 0 && (\r\n                                <TableRow>\r\n                                    <TableCell colSpan={10}>\r\n                                        <Skeleton count={10} height={60} duration={2} />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </div>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 15, 25, 50, 75, 100]}\r\n                    component=\"div\"\r\n                    count={accounts.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    backIconButtonProps={{\r\n                        'aria-label': 'Previous Page',\r\n                    }}\r\n                    nextIconButtonProps={{\r\n                        'aria-label': 'Next Page',\r\n                    }}\r\n                    onChangePage={this.handleChangePage}\r\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nEnhancedTableAccount.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    listName: PropTypes.string.isRequired,\r\n    accounts: PropTypes.arrayOf(accountShape).isRequired,\r\n    getAllUserAccount: PropTypes.func.isRequired,\r\n    openForm: PropTypes.func.isRequired,\r\n    findAccountById: PropTypes.func.isRequired,\r\n    deleteUserAccount: PropTypes.func.isRequired\r\n};\r\n\r\nEnhancedTableAccount.defaultProps = {\r\n    accounts: []\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    accounts: state.account.accounts,\r\n    accountById: state.account.getAccounts\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getAllUserAccount: accountOperations.getAllUserAccount,\r\n    openForm: accountOperations.openFormEdit,\r\n    findAccountById: accountOperations.getUserAccountById,\r\n    deleteUserAccount: accountOperations.deleteUserAccount\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(EnhancedTableAccount));"]}]}