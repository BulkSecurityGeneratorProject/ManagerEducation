{"remainingRequest":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js!E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\ducks\\table\\reducers.js","dependencies":[{"path":"E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\ducks\\table\\reducers.js","mtime":1556277480625},{"path":"E:\\QuanLyDaoTao\\Front-end\\.babelrc","mtime":1554785266000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { combineReducers } from \"redux\";\nimport * as types from \"./types\";\nimport * as utils from './utils';\nimport { createReducer } from \"../../utils\";\nvar tableReducer = createReducer([])(_defineProperty({}, types.SET_ROWS, function (state, action) {\n  if (action.payload) {\n    state = action.payload;\n  }\n\n  return state;\n}));\nexport default combineReducers({\n  tableRows: tableReducer\n});",{"version":3,"sources":["E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\ducks\\table\\reducers.js"],"names":["combineReducers","types","utils","createReducer","tableReducer","SET_ROWS","state","action","payload","tableRows"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,SAASC,aAAT,QAA8B,aAA9B;AAGA,IAAMC,YAAY,GAAGD,aAAa,CAAE,EAAF,CAAb,qBACfF,KAAK,CAACI,QADS,EACG,UAAEC,KAAF,EAASC,MAAT,EAAqB;AACrC,MAAIA,MAAM,CAACC,OAAX,EAAoB;AAChBF,IAAAA,KAAK,GAAGC,MAAM,CAACC,OAAf;AACH;;AACD,SAAOF,KAAP;AACH,CANgB,EAArB;AAUA,eAAeN,eAAe,CAAE;AAC5BS,EAAAA,SAAS,EAAEL;AADiB,CAAF,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport * as utils from './utils';\r\nimport { createReducer } from \"../../utils\";\r\n\r\n\r\nconst tableReducer = createReducer( [] )( {\r\n    [ types.SET_ROWS ]: ( state, action ) => {\r\n        if (action.payload) {\r\n            state = action.payload;\r\n        }\r\n        return state;\r\n    }\r\n});\r\n\r\n\r\nexport default combineReducers( {\r\n    tableRows: tableReducer\r\n} );"]}]}