{"remainingRequest":"e:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js!e:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\ducks\\account\\actions.js","dependencies":[{"path":"e:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\ducks\\account\\actions.js","mtime":1557416825796},{"path":"e:\\QuanLyDaoTao\\Front-end\\.babelrc","mtime":1554785266000},{"path":"e:\\QuanLyDaoTao\\Front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"e:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import * as types from \"./types\";\nimport isomorphicFetch from \"isomorphic-fetch\";\nexport var getAllUserAccount = function getAllUserAccount() {\n  return {\n    type: types.GET_ALL_USER_ACCOUNT,\n    meta: {\n      async: true,\n      blocking: true,\n      path: \"/users\",\n      method: \"GET\"\n    }\n  };\n};\nexport var addNewUserAccount = function addNewUserAccount(dataForm) {\n  return {\n    type: types.ADD_NEW_USER_ACCOUNT,\n    meta: {\n      async: true,\n      blocking: true,\n      path: \"/register\",\n      method: \"POST\",\n      body: JSON.stringify(dataForm)\n    }\n  };\n};\nexport var uploadAvatar = function uploadAvatar(file) {\n  return {\n    type: types.UPLOAD_AVATAR,\n    meta: {\n      async: true,\n      blocking: true,\n      path: \"/uploadAvatar\",\n      method: \"POST\",\n      body: file,\n      header: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem('user')\n      }\n    }\n  };\n};\nexport var updateUserAccount = function updateUserAccount() {\n  return {};\n};\nexport var deleteUserAccount = function deleteUserAccount() {\n  return {};\n};",{"version":3,"sources":["e:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\ducks\\account\\actions.js"],"names":["types","isomorphicFetch","getAllUserAccount","type","GET_ALL_USER_ACCOUNT","meta","async","blocking","path","method","addNewUserAccount","dataForm","ADD_NEW_USER_ACCOUNT","body","JSON","stringify","uploadAvatar","file","UPLOAD_AVATAR","header","localStorage","getItem","updateUserAccount","deleteUserAccount"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,eAAP,MAA4B,kBAA5B;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAQ;AACrCC,IAAAA,IAAI,EAAEH,KAAK,CAACI,oBADyB;AAErCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAE,IADL;AAEFC,MAAAA,QAAQ,EAAE,IAFR;AAGFC,MAAAA,IAAI,EAAE,QAHJ;AAIFC,MAAAA,MAAM,EAAE;AAJN;AAF+B,GAAR;AAAA,CAA1B;AAUP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAEC,QAAF;AAAA,SAAkB;AAC/CR,IAAAA,IAAI,EAAEH,KAAK,CAACY,oBADmC;AAE/CP,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAE,IADL;AAEFC,MAAAA,QAAQ,EAAE,IAFR;AAGFC,MAAAA,IAAI,EAAE,WAHJ;AAIFC,MAAAA,MAAM,EAAE,MAJN;AAKFI,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,QAAf;AALJ;AAFyC,GAAlB;AAAA,CAA1B;AAWP,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAAEC,IAAF;AAAA,SAAa;AACrCd,IAAAA,IAAI,EAAEH,KAAK,CAACkB,aADyB;AAErCb,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAE,IADL;AAEFC,MAAAA,QAAQ,EAAE,IAFR;AAGFC,MAAAA,IAAI,EAAE,eAHJ;AAIFC,MAAAA,MAAM,EAAE,MAJN;AAKFI,MAAAA,IAAI,EAAEI,IALJ;AAMFE,MAAAA,MAAM,EAAE;AACJ,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,MAArB;AADzB;AANN;AAF+B,GAAb;AAAA,CAArB;AAcP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAS,EAAT;AAAA,CAA1B;AAIP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAS,EAAT;AAAA,CAA1B","sourcesContent":["import * as types from \"./types\";\r\nimport isomorphicFetch from \"isomorphic-fetch\";\r\n\r\nexport const getAllUserAccount = () => ( {\r\n    type: types.GET_ALL_USER_ACCOUNT,\r\n    meta: {\r\n        async: true,\r\n        blocking: true,\r\n        path: \"/users\",\r\n        method: \"GET\"\r\n    }\r\n} );\r\n\r\nexport const addNewUserAccount = ( dataForm ) => ( {\r\n    type: types.ADD_NEW_USER_ACCOUNT,\r\n    meta: {\r\n        async: true,\r\n        blocking: true,\r\n        path: \"/register\",\r\n        method: \"POST\",\r\n        body: JSON.stringify(dataForm)\r\n    }\r\n});\r\n\r\nexport const uploadAvatar = ( file ) => ({\r\n    type: types.UPLOAD_AVATAR,\r\n    meta: {\r\n        async: true,\r\n        blocking: true,\r\n        path: \"/uploadAvatar\",\r\n        method: \"POST\",\r\n        body: file,\r\n        header: {\r\n            \"Authorization\": \"Bearer \" + localStorage.getItem('user')\r\n        }\r\n    }\r\n});\r\n\r\nexport const updateUserAccount = ( ) => ( {\r\n    \r\n});\r\n\r\nexport const deleteUserAccount = ( ) => ( {\r\n    \r\n});\r\n\r\n \r\n"]}]}