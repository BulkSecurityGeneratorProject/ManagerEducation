{"remainingRequest":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js!E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\ducks\\course\\reducers.js","dependencies":[{"path":"E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\ducks\\course\\reducers.js","mtime":1559933682894},{"path":"E:\\QuanLyDaoTao\\Front-end\\.babelrc","mtime":1559591694343},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _createReducer;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { combineReducers } from \"redux\";\nimport * as types from \"./types\";\nimport { createReducer } from \"../../utils\";\nvar applyListReducer = createReducer([])((_createReducer = {}, _defineProperty(_createReducer, types.GET_ALL_COURSE_BY_ID_YEAR_COMPLETED, function (state, action) {\n  return action.payload;\n}), _defineProperty(_createReducer, types.GET_ALL_COURSE_BY_MAX_CLASSES_COMPLETED, function (state, action) {\n  return action.payload;\n}), _createReducer)); // const getAccountReducer = createReducer( {} )( {\n//     [ types.GET_USER_ACCOUNT_BY_ID ]: ( state, action ) => {\n//         state = {};\n//         return state;\n//     },\n//     [ types.GET_USER_ACCOUNT_BY_ID_COMPLETED ]: ( state, action ) => {\n//         if (action.payload) {\n//             state = action.payload\n//         }\n//         return state;\n//     },\n//     [ types.GET_USER_ACCOUNT_BY_ID_FAILED ]: ( state, action ) => {\n//         return state;\n//     },\n// });\n// const initialState = {progress: false, status: '',  data: {}}\n// const actionReducer = createReducer( initialState )( {\n//     [ types.ADD_NEW_USER_ACCOUNT ]: ( state, action ) => {\n//         state = {progress: true, status: 'ADDING', data: {}}\n//         return state;\n//     },\n//     [ types.ADD_NEW_USER_ACCOUNT_COMPLETED ]: ( state, action ) => {\n//         state = {progress: false, status: 'ADD_SUCCESS', data: {}}\n//         return state;\n//     },\n//     [ types.ADD_NEW_USER_ACCOUNT_FAILED ]: ( state, action ) => {\n//         state = {progress: false, status: 'ADD_FAILED', data: action.payload}\n//         return state;\n//     },\n//     [ types.UPDATE_USER_ACCOUNT ]: ( state, action ) => {\n//         state = {progress: true, status: 'UPDATING', data: {}}\n//         return state;\n//     },\n//     [ types.UPDATE_USER_ACCOUNT_COMPLETED ]: ( state, action ) => {\n//         state = {progress: false, status: 'UPDATE_SUCCESS', data: {}}\n//         return state;\n//     },\n//     [ types.UPDATE_USER_ACCOUNT_FAILED ]: ( state, action ) => {\n//         state = {progress: false, status: 'UPDATE_FAILED', data: action.payload}\n//         return state;\n//     },\n//     [ types.DELETE_USER_ACCOUNT ]: ( state, action ) => {\n//         return state;\n//     },\n//     [ types.DELETE_USER_ACCOUNT_COMPLETED ]: ( state, action ) => {\n//         state = {progress: false, status: 'DELETE_SUCCESS', data: action.payload}\n//         return state;\n//     },\n//     [ types.DELETE_USER_ACCOUNT_FAILED ]: ( state, action ) => {\n//         state = {progress: false, status: 'DELETE_FAILED', data: action.payload}\n//         return state;\n//     }\n// });\n// const toggleEditAccountReducer = createReducer( false )( {\n//     [ types.OPEN_EDIT_USER_ACCOUNT ]: ( state, action ) => {\n//         state = true;\n//         return state;\n//     },\n//     [ types.CLOSE_EDIT_USER_ACCOUNT ]: ( state, action ) => {\n//         state = false;\n//         return state;\n//     }\n// });\n\nexport default combineReducers({\n  list: applyListReducer\n});",{"version":3,"sources":["E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\ducks\\course\\reducers.js"],"names":["combineReducers","types","createReducer","applyListReducer","GET_ALL_COURSE_BY_ID_YEAR_COMPLETED","state","action","payload","GET_ALL_COURSE_BY_MAX_CLASSES_COMPLETED","list"],"mappings":";;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,SAASC,aAAT,QAA8B,aAA9B;AAEA,IAAMC,gBAAgB,GAAGD,aAAa,CAAE,EAAF,CAAb,uDACnBD,KAAK,CAACG,mCADa,EAC0B,UAAEC,KAAF,EAASC,MAAT;AAAA,SAAqBA,MAAM,CAACC,OAA5B;AAAA,CAD1B,mCAEnBN,KAAK,CAACO,uCAFa,EAE8B,UAAEH,KAAF,EAASC,MAAT;AAAA,SAAqBA,MAAM,CAACC,OAA5B;AAAA,CAF9B,mBAAzB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeP,eAAe,CAAE;AAC5BS,EAAAA,IAAI,EAAEN;AADsB,CAAF,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport { createReducer } from \"../../utils\";\r\n\r\nconst applyListReducer = createReducer( [] )( {\r\n    [ types.GET_ALL_COURSE_BY_ID_YEAR_COMPLETED ]: ( state, action ) => action.payload,\r\n    [ types.GET_ALL_COURSE_BY_MAX_CLASSES_COMPLETED ]: ( state, action ) => action.payload,\r\n});\r\n\r\n// const getAccountReducer = createReducer( {} )( {\r\n//     [ types.GET_USER_ACCOUNT_BY_ID ]: ( state, action ) => {\r\n//         state = {};\r\n//         return state;\r\n//     },\r\n//     [ types.GET_USER_ACCOUNT_BY_ID_COMPLETED ]: ( state, action ) => {\r\n//         if (action.payload) {\r\n//             state = action.payload\r\n//         }\r\n//         return state;\r\n//     },\r\n//     [ types.GET_USER_ACCOUNT_BY_ID_FAILED ]: ( state, action ) => {\r\n//         return state;\r\n//     },\r\n// });\r\n\r\n// const initialState = {progress: false, status: '',  data: {}}\r\n\r\n// const actionReducer = createReducer( initialState )( {\r\n//     [ types.ADD_NEW_USER_ACCOUNT ]: ( state, action ) => {\r\n//         state = {progress: true, status: 'ADDING', data: {}}\r\n//         return state;\r\n//     },\r\n//     [ types.ADD_NEW_USER_ACCOUNT_COMPLETED ]: ( state, action ) => {\r\n//         state = {progress: false, status: 'ADD_SUCCESS', data: {}}\r\n//         return state;\r\n//     },\r\n//     [ types.ADD_NEW_USER_ACCOUNT_FAILED ]: ( state, action ) => {\r\n//         state = {progress: false, status: 'ADD_FAILED', data: action.payload}\r\n//         return state;\r\n//     },\r\n//     [ types.UPDATE_USER_ACCOUNT ]: ( state, action ) => {\r\n//         state = {progress: true, status: 'UPDATING', data: {}}\r\n//         return state;\r\n//     },\r\n//     [ types.UPDATE_USER_ACCOUNT_COMPLETED ]: ( state, action ) => {\r\n//         state = {progress: false, status: 'UPDATE_SUCCESS', data: {}}\r\n//         return state;\r\n//     },\r\n//     [ types.UPDATE_USER_ACCOUNT_FAILED ]: ( state, action ) => {\r\n//         state = {progress: false, status: 'UPDATE_FAILED', data: action.payload}\r\n//         return state;\r\n//     },\r\n//     [ types.DELETE_USER_ACCOUNT ]: ( state, action ) => {\r\n//         return state;\r\n//     },\r\n//     [ types.DELETE_USER_ACCOUNT_COMPLETED ]: ( state, action ) => {\r\n//         state = {progress: false, status: 'DELETE_SUCCESS', data: action.payload}\r\n//         return state;\r\n//     },\r\n//     [ types.DELETE_USER_ACCOUNT_FAILED ]: ( state, action ) => {\r\n//         state = {progress: false, status: 'DELETE_FAILED', data: action.payload}\r\n//         return state;\r\n//     }\r\n// });\r\n\r\n// const toggleEditAccountReducer = createReducer( false )( {\r\n//     [ types.OPEN_EDIT_USER_ACCOUNT ]: ( state, action ) => {\r\n//         state = true;\r\n//         return state;\r\n//     },\r\n//     [ types.CLOSE_EDIT_USER_ACCOUNT ]: ( state, action ) => {\r\n//         state = false;\r\n//         return state;\r\n//     }\r\n// });\r\n\r\n\r\nexport default combineReducers( {\r\n    list: applyListReducer,\r\n} );"]}]}