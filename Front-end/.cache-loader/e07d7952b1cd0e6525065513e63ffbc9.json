{"remainingRequest":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js!E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\store\\store.js","dependencies":[{"path":"E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\store\\store.js","mtime":1555573245779},{"path":"E:\\QuanLyDaoTao\\Front-end\\.babelrc","mtime":1560160717751},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunkMiddleware from \"redux-thunk\";\nimport * as reducer from '../ducks';\nimport { apiService, createLogger } from \"../middlewares\";\nexport default function configStore(initialState) {\n  var rootReducer = combineReducers(reducer);\n  return createStore(rootReducer, initialState, applyMiddleware(apiService, thunkMiddleware, createLogger(true)));\n}",{"version":3,"sources":["E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\store\\store.js"],"names":["createStore","combineReducers","applyMiddleware","thunkMiddleware","reducer","apiService","createLogger","configStore","initialState","rootReducer"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,eAArB,EAAqCC,eAArC,QAA4D,OAA5D;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAO,KAAKC,OAAZ,MAAyB,UAAzB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,gBAAzC;AAEA,eAAe,SAASC,WAAT,CAAqBC,YAArB,EAAmC;AAC9C,MAAMC,WAAW,GAAGR,eAAe,CAAGG,OAAH,CAAnC;AAEA,SAAOJ,WAAW,CACdS,WADc,EAEdD,YAFc,EAGdN,eAAe,CACXG,UADW,EAEXF,eAFW,EAGXG,YAAY,CAAC,IAAD,CAHD,CAHD,CAAlB;AASH","sourcesContent":["import { createStore,combineReducers,applyMiddleware } from 'redux';\nimport thunkMiddleware from \"redux-thunk\";\nimport * as reducer from '../ducks';\nimport { apiService, createLogger } from \"../middlewares\";\n\nexport default function configStore(initialState) {\n    const rootReducer = combineReducers ( reducer );\n\n    return createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(\n            apiService,\n            thunkMiddleware,\n            createLogger(true)\n        )\n    );\n}"]}]}