{"remainingRequest":"D:\\ManageEducation\\ManagerEducation\\Front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ManageEducation\\ManagerEducation\\Front-end\\src\\app\\state\\store\\store.js","dependencies":[{"path":"D:\\ManageEducation\\ManagerEducation\\Front-end\\src\\app\\state\\store\\store.js","mtime":1555920642295},{"path":"D:\\ManageEducation\\ManagerEducation\\Front-end\\.babelrc","mtime":1555478544709},{"path":"D:\\ManageEducation\\ManagerEducation\\Front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ManageEducation\\ManagerEducation\\Front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunkMiddleware from \"redux-thunk\";\nimport * as reducer from '../ducks';\nimport { apiService, createLogger } from \"../middlewares\";\nexport default function configStore(initialState) {\n  var rootReducer = combineReducers(reducer);\n  return createStore(rootReducer, initialState, applyMiddleware(apiService, thunkMiddleware, createLogger(true)));\n}",{"version":3,"sources":["D:\\ManageEducation\\ManagerEducation\\Front-end\\src\\app\\state\\store\\store.js"],"names":["createStore","combineReducers","applyMiddleware","thunkMiddleware","reducer","apiService","createLogger","configStore","initialState","rootReducer"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,eAArB,EAAqCC,eAArC,QAA4D,OAA5D;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAO,KAAKC,OAAZ,MAAyB,UAAzB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,gBAAzC;AAEA,eAAe,SAASC,WAAT,CAAqBC,YAArB,EAAmC;AAC9C,MAAMC,WAAW,GAAGR,eAAe,CAAGG,OAAH,CAAnC;AAEA,SAAOJ,WAAW,CACdS,WADc,EAEdD,YAFc,EAGdN,eAAe,CACXG,UADW,EAEXF,eAFW,EAGXG,YAAY,CAAC,IAAD,CAHD,CAHD,CAAlB;AASH","sourcesContent":["import { createStore,combineReducers,applyMiddleware } from 'redux';\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport * as reducer from '../ducks';\r\nimport { apiService, createLogger } from \"../middlewares\";\r\n\r\nexport default function configStore(initialState) {\r\n    const rootReducer = combineReducers ( reducer );\r\n\r\n    return createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(\r\n            apiService,\r\n            thunkMiddleware,\r\n            createLogger(true)\r\n        )\r\n    );\r\n}"]}]}