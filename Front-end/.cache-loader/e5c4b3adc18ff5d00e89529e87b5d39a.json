{"remainingRequest":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js!E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\ducks\\session\\reducers.js","dependencies":[{"path":"E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\ducks\\session\\reducers.js","mtime":1555846099355},{"path":"E:\\QuanLyDaoTao\\Front-end\\.babelrc","mtime":1554785266000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _createReducer;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { combineReducers } from \"redux\";\nimport * as types from \"./types\";\nimport * as utils from './utils';\nimport { createReducer } from \"../../utils\";\nimport { history } from '../../utils';\nvar user = sessionStorage.getItem('user');\nvar initialState = user ? {\n  loggedIn: true,\n  user: user\n} : {};\nvar authReducer = createReducer(initialState)((_createReducer = {}, _defineProperty(_createReducer, types.LOGIN_COMPLETED, function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.payload) {\n    utils.saveJwtTokenOnTheStograte(action.payload.id_token);\n  }\n\n  history.push('/administrator/home');\n  state = {\n    loggedIn: true,\n    user: action.payload.id_token\n  };\n  return state;\n}), _defineProperty(_createReducer, types.LOGIN_FAILED, function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  state = {\n    loggedIn: false,\n    user: 'Login failed'\n  };\n  return state;\n}), _defineProperty(_createReducer, types.LOGOUT, function (state, action) {\n  return state;\n}), _createReducer));\nexport default combineReducers({\n  isAuthenticated: authReducer\n});",{"version":3,"sources":["E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\ducks\\session\\reducers.js"],"names":["combineReducers","types","utils","createReducer","history","user","sessionStorage","getItem","initialState","loggedIn","authReducer","LOGIN_COMPLETED","state","action","payload","saveJwtTokenOnTheStograte","id_token","push","LOGIN_FAILED","LOGOUT","isAuthenticated"],"mappings":";;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,IAAIC,IAAI,GAAGC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX;AAEA,IAAMC,YAAY,GAAGH,IAAI,GAAG;AAAEI,EAAAA,QAAQ,EAAC,IAAX;AAAiBJ,EAAAA,IAAI,EAAJA;AAAjB,CAAH,GAA6B,EAAtD;AAEA,IAAMK,WAAW,GAAGP,aAAa,CAAEK,YAAF,CAAb,uDACdP,KAAK,CAACU,eADQ,EACW,YAAoC;AAAA,MAAlCC,KAAkC,uEAA1BJ,YAA0B;AAAA,MAAZK,MAAY;;AAC3D,MAAIA,MAAM,CAACC,OAAX,EAAoB;AAChBZ,IAAAA,KAAK,CAACa,yBAAN,CAAgCF,MAAM,CAACC,OAAP,CAAeE,QAA/C;AACH;;AACDZ,EAAAA,OAAO,CAACa,IAAR,CAAa,qBAAb;AACAL,EAAAA,KAAK,GAAG;AACJH,IAAAA,QAAQ,EAAC,IADL;AAEJJ,IAAAA,IAAI,EAAEQ,MAAM,CAACC,OAAP,CAAeE;AAFjB,GAAR;AAIA,SAAOJ,KAAP;AACH,CAXe,mCAYdX,KAAK,CAACiB,YAZQ,EAYQ,YAAoC;AAAA,MAAlCN,KAAkC,uEAA1BJ,YAA0B;AAAA,MAAZK,MAAY;AACxDD,EAAAA,KAAK,GAAG;AACJH,IAAAA,QAAQ,EAAE,KADN;AAEJJ,IAAAA,IAAI,EAAE;AAFF,GAAR;AAIA,SAAOO,KAAP;AACH,CAlBe,mCAmBdX,KAAK,CAACkB,MAnBQ,EAmBE,UAAEP,KAAF,EAASC,MAAT,EAAqB;AACnC,SAAOD,KAAP;AACH,CArBe,mBAApB;AAwBA,eAAeZ,eAAe,CAAE;AAC5BoB,EAAAA,eAAe,EAAEV;AADW,CAAF,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport * as utils from './utils';\r\nimport { createReducer } from \"../../utils\";\r\nimport { history } from '../../utils';\r\n\r\nlet user = sessionStorage.getItem('user');\r\n\r\nconst initialState = user ? { loggedIn:true, user } : {};\r\n\r\nconst authReducer = createReducer( initialState )( {\r\n    [ types.LOGIN_COMPLETED ]: ( state = initialState, action ) => {\r\n        if (action.payload) {\r\n            utils.saveJwtTokenOnTheStograte(action.payload.id_token);\r\n        }\r\n        history.push('/administrator/home');\r\n        state = {\r\n            loggedIn:true, \r\n            user: action.payload.id_token\r\n        }\r\n        return state;\r\n    },\r\n    [ types.LOGIN_FAILED ]: ( state = initialState, action ) => {\r\n        state = {\r\n            loggedIn: false,\r\n            user: 'Login failed'\r\n        }\r\n        return state;\r\n    },\r\n    [ types.LOGOUT ]: ( state, action ) => {\r\n        return state;\r\n    }\r\n} );\r\n\r\nexport default combineReducers( {\r\n    isAuthenticated: authReducer\r\n} );"]}]}