{"remainingRequest":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js!E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\ducks\\account\\reducers.js","dependencies":[{"path":"E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\ducks\\account\\reducers.js","mtime":1556881492285},{"path":"E:\\QuanLyDaoTao\\Front-end\\.babelrc","mtime":1554785266000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _createReducer;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { combineReducers } from \"redux\";\nimport * as types from \"./types\";\nimport * as utils from './utils';\nimport { createReducer } from \"../../utils\";\nvar accountReducer = createReducer([])((_createReducer = {}, _defineProperty(_createReducer, types.GET_ALL_USER_ACCOUNT_COMPLETED, function (state, action) {\n  if (action.payload) {\n    state = action.payload;\n  }\n\n  return state;\n}), _defineProperty(_createReducer, types.ADD_NEW_USER_ACCOUNT, function (state, action) {\n  return state;\n}), _defineProperty(_createReducer, types.ADD_NEW_USER_ACCOUNT_COMPLETE, function (state, action) {\n  console.log('upload success!');\n  return state;\n}), _defineProperty(_createReducer, types.UPDATE_USER_ACCOUNT, function (state, action) {\n  return state;\n}), _defineProperty(_createReducer, types.DELETE_USER_ACCOUNT, function (state, action) {\n  return state;\n}), _createReducer));\nexport default combineReducers({\n  accounts: accountReducer\n});",{"version":3,"sources":["E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\ducks\\account\\reducers.js"],"names":["combineReducers","types","utils","createReducer","accountReducer","GET_ALL_USER_ACCOUNT_COMPLETED","state","action","payload","ADD_NEW_USER_ACCOUNT","ADD_NEW_USER_ACCOUNT_COMPLETE","console","log","UPDATE_USER_ACCOUNT","DELETE_USER_ACCOUNT","accounts"],"mappings":";;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,SAASC,aAAT,QAA8B,aAA9B;AAEA,IAAMC,cAAc,GAAGD,aAAa,CAAE,EAAF,CAAb,uDACjBF,KAAK,CAACI,8BADW,EACuB,UAAEC,KAAF,EAASC,MAAT,EAAqB;AAC3D,MAAIA,MAAM,CAACC,OAAX,EAAoB;AAChBF,IAAAA,KAAK,GAAGC,MAAM,CAACC,OAAf;AACH;;AACD,SAAOF,KAAP;AACH,CANkB,mCAOjBL,KAAK,CAACQ,oBAPW,EAOa,UAAEH,KAAF,EAASC,MAAT,EAAqB;AACjD,SAAOD,KAAP;AACH,CATkB,mCAUjBL,KAAK,CAACS,6BAVW,EAUsB,UAAEJ,KAAF,EAASC,MAAT,EAAqB;AAC1DI,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,SAAON,KAAP;AACH,CAbkB,mCAcjBL,KAAK,CAACY,mBAdW,EAcY,UAAEP,KAAF,EAASC,MAAT,EAAqB;AAChD,SAAOD,KAAP;AACH,CAhBkB,mCAiBjBL,KAAK,CAACa,mBAjBW,EAiBY,UAAER,KAAF,EAASC,MAAT,EAAqB;AAChD,SAAOD,KAAP;AACH,CAnBkB,mBAAvB;AAuBA,eAAeN,eAAe,CAAE;AAC5Be,EAAAA,QAAQ,EAAEX;AADkB,CAAF,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport * as utils from './utils';\r\nimport { createReducer } from \"../../utils\";\r\n\r\nconst accountReducer = createReducer( [] )( {\r\n    [ types.GET_ALL_USER_ACCOUNT_COMPLETED ]: ( state, action ) => {\r\n        if (action.payload) {\r\n            state = action.payload;\r\n        }\r\n        return state;\r\n    },\r\n    [ types.ADD_NEW_USER_ACCOUNT ]: ( state, action ) => {\r\n        return state;\r\n    },\r\n    [ types.ADD_NEW_USER_ACCOUNT_COMPLETE ]: ( state, action ) => {\r\n        console.log('upload success!');\r\n        return state;\r\n    },\r\n    [ types.UPDATE_USER_ACCOUNT ]: ( state, action ) => {\r\n        return state;\r\n    },\r\n    [ types.DELETE_USER_ACCOUNT ]: ( state, action ) => {\r\n        return state;\r\n    }\r\n} );\r\n\r\n\r\nexport default combineReducers( {\r\n    accounts: accountReducer\r\n} );"]}]}