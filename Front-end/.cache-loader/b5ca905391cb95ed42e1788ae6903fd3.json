{"remainingRequest":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js!E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\ducks\\account\\actions.js","dependencies":[{"path":"E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\ducks\\account\\actions.js","mtime":1560068474936},{"path":"E:\\QuanLyDaoTao\\Front-end\\.babelrc","mtime":1559591694343},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import * as types from \"./types\";\nexport var doGetAllAccounts = function doGetAllAccounts() {\n  return {\n    type: types.GET_ALL_USER_ACCOUNT,\n    meta: {\n      async: true,\n      blocking: true,\n      path: \"/users\",\n      method: \"GET\"\n    }\n  };\n};\nexport var doGetAccountById = function doGetAccountById(id) {\n  return {\n    type: types.GET_USER_ACCOUNT_BY_ID,\n    meta: {\n      async: true,\n      blocking: true,\n      path: \"/users/\".concat(id),\n      method: \"GET\"\n    }\n  };\n};\nexport var doCreateNewAccount = function doCreateNewAccount(dataForm) {\n  return {\n    type: types.CREATE_NEW_USER_ACCOUNT,\n    meta: {\n      async: true,\n      blocking: true,\n      path: \"/users\",\n      method: \"POST\",\n      body: JSON.stringify(dataForm)\n    }\n  };\n};\nexport var doUpdateAccount = function doUpdateAccount(dataForm) {\n  return {\n    type: types.UPDATE_USER_ACCOUNT,\n    meta: {\n      async: true,\n      blocking: true,\n      path: \"/users\",\n      method: \"PUT\",\n      body: JSON.stringify(dataForm)\n    }\n  };\n};\nexport var doDeleteAccountByIds = function doDeleteAccountByIds(ids) {\n  return {\n    type: types.DELETE_USER_ACCOUNT,\n    meta: {\n      async: true,\n      blocking: true,\n      path: \"/users\",\n      method: \"DELETE\",\n      body: JSON.stringify(ids)\n    }\n  };\n};",{"version":3,"sources":["E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\ducks\\account\\actions.js"],"names":["types","doGetAllAccounts","type","GET_ALL_USER_ACCOUNT","meta","async","blocking","path","method","doGetAccountById","id","GET_USER_ACCOUNT_BY_ID","doCreateNewAccount","dataForm","CREATE_NEW_USER_ACCOUNT","body","JSON","stringify","doUpdateAccount","UPDATE_USER_ACCOUNT","doDeleteAccountByIds","ids","DELETE_USER_ACCOUNT"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAQ;AACpCC,IAAAA,IAAI,EAAEF,KAAK,CAACG,oBADwB;AAEpCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAE,IADL;AAEFC,MAAAA,QAAQ,EAAE,IAFR;AAGFC,MAAAA,IAAI,EAAE,QAHJ;AAIFC,MAAAA,MAAM,EAAE;AAJN;AAF8B,GAAR;AAAA,CAAzB;AAUP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAEC,EAAF;AAAA,SAAY;AACxCR,IAAAA,IAAI,EAAEF,KAAK,CAACW,sBAD4B;AAExCP,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAE,IADL;AAEFC,MAAAA,QAAQ,EAAE,IAFR;AAGFC,MAAAA,IAAI,mBAAYG,EAAZ,CAHF;AAIFF,MAAAA,MAAM,EAAE;AAJN;AAFkC,GAAZ;AAAA,CAAzB;AAUP,OAAO,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAAEC,QAAF;AAAA,SAAkB;AAChDX,IAAAA,IAAI,EAAEF,KAAK,CAACc,uBADoC;AAEhDV,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAE,IADL;AAEFC,MAAAA,QAAQ,EAAE,IAFR;AAGFC,MAAAA,IAAI,EAAE,QAHJ;AAIFC,MAAAA,MAAM,EAAE,MAJN;AAKFO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,QAAf;AALJ;AAF0C,GAAlB;AAAA,CAA3B;AAWP,OAAO,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAEL,QAAF;AAAA,SAAkB;AAC7CX,IAAAA,IAAI,EAAEF,KAAK,CAACmB,mBADiC;AAE7Cf,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAE,IADL;AAEFC,MAAAA,QAAQ,EAAE,IAFR;AAGFC,MAAAA,IAAI,EAAE,QAHJ;AAIFC,MAAAA,MAAM,EAAE,KAJN;AAKFO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,QAAf;AALJ;AAFuC,GAAlB;AAAA,CAAxB;AAWP,OAAO,IAAMO,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAEC,GAAF;AAAA,SAAa;AAC7CnB,IAAAA,IAAI,EAAEF,KAAK,CAACsB,mBADiC;AAE7ClB,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAE,IADL;AAEFC,MAAAA,QAAQ,EAAE,IAFR;AAGFC,MAAAA,IAAI,EAAE,QAHJ;AAIFC,MAAAA,MAAM,EAAE,QAJN;AAKFO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeI,GAAf;AALJ;AAFuC,GAAb;AAAA,CAA7B","sourcesContent":["import * as types from \"./types\";\r\n\r\nexport const doGetAllAccounts = () => ( {\r\n    type: types.GET_ALL_USER_ACCOUNT,\r\n    meta: {\r\n        async: true,\r\n        blocking: true,\r\n        path: \"/users\",\r\n        method: \"GET\"\r\n    }\r\n} );\r\n\r\nexport const doGetAccountById = ( id ) => ( {\r\n    type: types.GET_USER_ACCOUNT_BY_ID,\r\n    meta: {\r\n        async: true,\r\n        blocking: true,\r\n        path: `/users/${id}`,\r\n        method: \"GET\"\r\n    }\r\n} );\r\n\r\nexport const doCreateNewAccount = ( dataForm ) => ( {\r\n    type: types.CREATE_NEW_USER_ACCOUNT,\r\n    meta: {\r\n        async: true,\r\n        blocking: true,\r\n        path: \"/users\",\r\n        method: \"POST\",\r\n        body: JSON.stringify(dataForm)\r\n    }\r\n});\r\n\r\nexport const doUpdateAccount = ( dataForm ) => ( {\r\n    type: types.UPDATE_USER_ACCOUNT,\r\n    meta: {\r\n        async: true,\r\n        blocking: true,\r\n        path: \"/users\",\r\n        method: \"PUT\",\r\n        body: JSON.stringify(dataForm)\r\n    }\r\n});\r\n\r\nexport const doDeleteAccountByIds = ( ids ) => ( {\r\n    type: types.DELETE_USER_ACCOUNT,\r\n    meta: {\r\n        async: true,\r\n        blocking: true,\r\n        path: \"/users\",\r\n        method: \"DELETE\",\r\n        body: JSON.stringify(ids)\r\n    }\r\n});\r\n\r\n\r\n \r\n"]}]}