{"remainingRequest":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js!E:\\QuanLyDaoTao\\Front-end\\src\\app\\scenes\\components\\EnhancedTable\\EnhancedTable.jsx","dependencies":[{"path":"E:\\QuanLyDaoTao\\Front-end\\src\\app\\scenes\\components\\EnhancedTable\\EnhancedTable.jsx","mtime":1556310131144},{"path":"E:\\QuanLyDaoTao\\Front-end\\.babelrc","mtime":1554785266000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { EnhancedTableHead } from './components/EnhancedTableHead';\nimport { EnhancedTableToolBar } from './components/EnhancedTableToolBar';\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  var stabilizedThis = array.map(function (el, index) {\n    return [el, index];\n  });\n  stabilizedThis.sort(function (a, b) {\n    var order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(function (el) {\n    return el[0];\n  });\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? function (a, b) {\n    return desc(a, b, orderBy);\n  } : function (a, b) {\n    return -desc(a, b, orderBy);\n  };\n}\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3\n    },\n    table: {\n      minWidth: 1020\n    },\n    tableWrapper: {\n      overflowX: 'auto'\n    }\n  };\n};\n\nvar EnhancedTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EnhancedTable, _React$Component);\n\n  function EnhancedTable(props) {\n    var _this;\n\n    _classCallCheck(this, EnhancedTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EnhancedTable).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRequestSort\", function (event, property) {\n      var orderBy = property;\n      var order = 'desc';\n\n      if (_this.state.orderBy === property && _this.state.order === 'desc') {\n        order = 'asc';\n      }\n\n      _this.setState({\n        order: order,\n        orderBy: orderBy\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelectAllClick\", function (event) {\n      if (event.target.checked) {\n        _this.setState({\n          selected: _this.props.datas.map(function (n) {\n            return n.id;\n          })\n        });\n\n        return;\n      }\n\n      _this.setState({\n        selected: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (event, id) {\n      var selected = _this.state.selected;\n      var selectedIndex = selected.indexOf(id);\n      var newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      _this.setState({\n        selected: newSelected\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChangePage\", function (event, page) {\n      _this.setState({\n        page: page\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChangeRowsPerPage\", function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isSelected\", function (id) {\n      return _this.state.selected.indexOf(id) !== -1;\n    });\n\n    _this.state = {\n      order: 'asc',\n      orderBy: 'calories',\n      data: [],\n      selected: [],\n      page: 0,\n      rowsPerPage: 10\n    };\n    return _this;\n  }\n\n  _createClass(EnhancedTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          listName = _this$props.listName,\n          datas = _this$props.datas,\n          cells = _this$props.cells;\n      var _this$state = this.state,\n          order = _this$state.order,\n          orderBy = _this$state.orderBy,\n          selected = _this$state.selected,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page;\n      var emptyRows = rowsPerPage - Math.min(rowsPerPage, datas.length - page * rowsPerPage);\n      return React.createElement(Paper, {\n        className: classes.root\n      }, React.createElement(EnhancedTableToolBar, {\n        numSelected: selected.length,\n        listName: listName\n      }), React.createElement(\"hr\", {\n        className: \"tall\"\n      }), React.createElement(\"div\", {\n        className: classes.tableWrapper\n      }, React.createElement(Table, {\n        className: classes.table,\n        \"aria-labelledby\": \"tableTitle\"\n      }, React.createElement(EnhancedTableHead, {\n        numSelected: selected.length,\n        order: order,\n        orderBy: orderBy,\n        onSelectAllClick: this.handleSelectAllClick,\n        onRequestSort: this.handleRequestSort,\n        rowCount: datas.length\n      }), React.createElement(TableBody, null, stableSort(datas, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (n) {\n        var isSelected = _this2.isSelected(n.id);\n\n        return React.createElement(TableRow, {\n          hover: true,\n          onClick: function onClick(event) {\n            return _this2.handleClick(event, n.id);\n          },\n          role: \"checkbox\",\n          \"aria-checked\": isSelected,\n          tabIndex: -1,\n          key: n.id,\n          selected: isSelected\n        }, React.createElement(TableCell, {\n          padding: \"checkbox\"\n        }, React.createElement(Checkbox, {\n          checked: isSelected,\n          color: \"default\"\n        })), cells.map(function (value, index) {\n          return React.createElement(TableCell, {\n            key: index,\n            padding: \"default\"\n          }, n[value]);\n        }));\n      }), emptyRows > 0 && React.createElement(TableRow, {\n        style: {\n          height: 49 * emptyRows\n        }\n      }, React.createElement(TableCell, {\n        colSpan: 6\n      }))))), React.createElement(TablePagination, {\n        rowsPerPageOptions: [5, 10, 15, 25, 50, 75, 100],\n        component: \"div\",\n        count: datas.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          'aria-label': 'Previous Page'\n        },\n        nextIconButtonProps: {\n          'aria-label': 'Next Page'\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.handleChangeRowsPerPage\n      }));\n    }\n  }]);\n\n  return EnhancedTable;\n}(React.Component);\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  listName: PropTypes.string.isRequired\n};\nexport default withStyles(styles)(EnhancedTable);",{"version":3,"sources":["E:\\QuanLyDaoTao\\Front-end\\src\\app\\scenes\\components\\EnhancedTable\\EnhancedTable.jsx"],"names":["React","PropTypes","withStyles","Table","TableBody","TableCell","TablePagination","TableRow","Paper","Checkbox","EnhancedTableHead","EnhancedTableToolBar","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","styles","theme","root","width","marginTop","spacing","unit","table","minWidth","tableWrapper","overflowX","EnhancedTable","props","event","property","state","setState","target","checked","selected","datas","n","id","selectedIndex","indexOf","newSelected","concat","slice","length","page","rowsPerPage","value","data","classes","listName","cells","emptyRows","Math","min","handleSelectAllClick","handleRequestSort","isSelected","handleClick","height","handleChangePage","handleChangeRowsPerPage","Component","propTypes","object","isRequired","string"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,oBAAT,QAAqC,mCAArC;;AAGA,SAASC,IAAT,CAAcC,CAAd,EAAiBC,CAAjB,EAAoBC,OAApB,EAA6B;AACzB,MAAID,CAAC,CAACC,OAAD,CAAD,GAAaF,CAAC,CAACE,OAAD,CAAlB,EAA6B;AACzB,WAAO,CAAC,CAAR;AACH;;AACD,MAAID,CAAC,CAACC,OAAD,CAAD,GAAaF,CAAC,CAACE,OAAD,CAAlB,EAA6B;AACzB,WAAO,CAAP;AACH;;AACD,SAAO,CAAP;AACH;;AAED,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,GAA3B,EAAgC;AAC5B,MAAMC,cAAc,GAAGF,KAAK,CAACG,GAAN,CAAU,UAACC,EAAD,EAAKC,KAAL;AAAA,WAAe,CAACD,EAAD,EAAKC,KAAL,CAAf;AAAA,GAAV,CAAvB;AACAH,EAAAA,cAAc,CAACI,IAAf,CAAoB,UAACV,CAAD,EAAIC,CAAJ,EAAU;AAC1B,QAAMU,KAAK,GAAGN,GAAG,CAACL,CAAC,CAAC,CAAD,CAAF,EAAOC,CAAC,CAAC,CAAD,CAAR,CAAjB;AACA,QAAIU,KAAK,KAAK,CAAd,EAAiB,OAAOA,KAAP;AACjB,WAAOX,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAf;AACH,GAJD;AAKA,SAAOK,cAAc,CAACC,GAAf,CAAmB,UAAAC,EAAE;AAAA,WAAIA,EAAE,CAAC,CAAD,CAAN;AAAA,GAArB,CAAP;AACH;;AAED,SAASI,UAAT,CAAoBD,KAApB,EAA2BT,OAA3B,EAAoC;AAChC,SAAOS,KAAK,KAAK,MAAV,GAAmB,UAACX,CAAD,EAAIC,CAAJ;AAAA,WAAUF,IAAI,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CAAd;AAAA,GAAnB,GAAmD,UAACF,CAAD,EAAIC,CAAJ;AAAA,WAAU,CAACF,IAAI,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CAAf;AAAA,GAA1D;AACH;;AAED,IAAMW,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAE,MADL;AAEFC,MAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAcC,IAAd,GAAqB;AAF9B,KADe;AAKrBC,IAAAA,KAAK,EAAE;AACHC,MAAAA,QAAQ,EAAE;AADP,KALc;AAQrBC,IAAAA,YAAY,EAAE;AACVC,MAAAA,SAAS,EAAE;AADD;AARO,GAAL;AAAA,CAApB;;IAaMC,a;;;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,uFAAMA,KAAN;;AADe,wEAaC,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACrC,UAAMzB,OAAO,GAAGyB,QAAhB;AACA,UAAIhB,KAAK,GAAG,MAAZ;;AAEA,UAAI,MAAKiB,KAAL,CAAW1B,OAAX,KAAuByB,QAAvB,IAAmC,MAAKC,KAAL,CAAWjB,KAAX,KAAqB,MAA5D,EAAoE;AAChEA,QAAAA,KAAK,GAAG,KAAR;AACH;;AAED,YAAKkB,QAAL,CAAc;AAAElB,QAAAA,KAAK,EAALA,KAAF;AAAST,QAAAA,OAAO,EAAPA;AAAT,OAAd;AACH,KAtBkB;;AAAA,2EAwBI,UAAAwB,KAAK,EAAI;AAC5B,UAAIA,KAAK,CAACI,MAAN,CAAaC,OAAjB,EAA0B;AACtB,cAAKF,QAAL,CAAc;AAAEG,UAAAA,QAAQ,EAAE,MAAKP,KAAL,CAAWQ,KAAX,CAAiB1B,GAAjB,CAAqB,UAAA2B,CAAC;AAAA,mBAAIA,CAAC,CAACC,EAAN;AAAA,WAAtB;AAAZ,SAAd;;AACA;AACH;;AACD,YAAKN,QAAL,CAAc;AAAEG,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACH,KA9BkB;;AAAA,kEAgCL,UAACN,KAAD,EAAQS,EAAR,EAAe;AAAA,UACjBH,QADiB,GACJ,MAAKJ,KADD,CACjBI,QADiB;AAEzB,UAAMI,aAAa,GAAGJ,QAAQ,CAACK,OAAT,CAAiBF,EAAjB,CAAtB;AACA,UAAIG,WAAW,GAAG,EAAlB;;AAEA,UAAIF,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACtBE,QAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBP,QAAnB,EAA6BG,EAA7B,CAAd;AACH,OAFD,MAEO,IAAIC,aAAa,KAAK,CAAtB,EAAyB;AAC5BE,QAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBP,QAAQ,CAACQ,KAAT,CAAe,CAAf,CAAnB,CAAd;AACH,OAFM,MAEA,IAAIJ,aAAa,KAAKJ,QAAQ,CAACS,MAAT,GAAkB,CAAxC,EAA2C;AAC9CH,QAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBP,QAAQ,CAACQ,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAnB,CAAd;AACH,OAFM,MAEA,IAAIJ,aAAa,GAAG,CAApB,EAAuB;AAC1BE,QAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CACVP,QAAQ,CAACQ,KAAT,CAAe,CAAf,EAAkBJ,aAAlB,CADU,EAEVJ,QAAQ,CAACQ,KAAT,CAAeJ,aAAa,GAAG,CAA/B,CAFU,CAAd;AAIH;;AAED,YAAKP,QAAL,CAAc;AAAEG,QAAAA,QAAQ,EAAEM;AAAZ,OAAd;AACH,KAnDkB;;AAAA,uEAqDA,UAACZ,KAAD,EAAQgB,IAAR,EAAiB;AAChC,YAAKb,QAAL,CAAc;AAAEa,QAAAA,IAAI,EAAJA;AAAF,OAAd;AACH,KAvDkB;;AAAA,8EAyDO,UAAAhB,KAAK,EAAI;AAC/B,YAAKG,QAAL,CAAc;AAAEc,QAAAA,WAAW,EAAEjB,KAAK,CAACI,MAAN,CAAac;AAA5B,OAAd;AACH,KA3DkB;;AAAA,iEA6DN,UAAAT,EAAE;AAAA,aAAI,MAAKP,KAAL,CAAWI,QAAX,CAAoBK,OAApB,CAA4BF,EAA5B,MAAoC,CAAC,CAAzC;AAAA,KA7DI;;AAEf,UAAKP,KAAL,GAAa;AACTjB,MAAAA,KAAK,EAAE,KADE;AAETT,MAAAA,OAAO,EAAE,UAFA;AAGT2C,MAAAA,IAAI,EAAE,EAHG;AAITb,MAAAA,QAAQ,EAAE,EAJD;AAKTU,MAAAA,IAAI,EAAE,CALG;AAMTC,MAAAA,WAAW,EAAE;AANJ,KAAb;AAFe;AAUlB;;;;6BAqDQ;AAAA;;AAAA,wBACuC,KAAKlB,KAD5C;AAAA,UACGqB,OADH,eACGA,OADH;AAAA,UACYC,QADZ,eACYA,QADZ;AAAA,UACsBd,KADtB,eACsBA,KADtB;AAAA,UAC6Be,KAD7B,eAC6BA,KAD7B;AAAA,wBAEmD,KAAKpB,KAFxD;AAAA,UAEGjB,KAFH,eAEGA,KAFH;AAAA,UAEUT,OAFV,eAEUA,OAFV;AAAA,UAEmB8B,QAFnB,eAEmBA,QAFnB;AAAA,UAE6BW,WAF7B,eAE6BA,WAF7B;AAAA,UAE0CD,IAF1C,eAE0CA,IAF1C;AAGL,UAAMO,SAAS,GAAGN,WAAW,GAAGO,IAAI,CAACC,GAAL,CAASR,WAAT,EAAsBV,KAAK,CAACQ,MAAN,GAAeC,IAAI,GAAGC,WAA5C,CAAhC;AACA,aACI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEG,OAAO,CAAC/B;AAA1B,SACI,oBAAC,oBAAD;AAAsB,QAAA,WAAW,EAAEiB,QAAQ,CAACS,MAA5C;AAAoD,QAAA,QAAQ,EAAEM;AAA9D,QADJ,EAEI;AAAI,QAAA,SAAS,EAAC;AAAd,QAFJ,EAGI;AAAK,QAAA,SAAS,EAAED,OAAO,CAACxB;AAAxB,SACI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEwB,OAAO,CAAC1B,KAA1B;AAAiC,2BAAgB;AAAjD,SACI,oBAAC,iBAAD;AACI,QAAA,WAAW,EAAEY,QAAQ,CAACS,MAD1B;AAEI,QAAA,KAAK,EAAE9B,KAFX;AAGI,QAAA,OAAO,EAAET,OAHb;AAII,QAAA,gBAAgB,EAAE,KAAKkD,oBAJ3B;AAKI,QAAA,aAAa,EAAE,KAAKC,iBALxB;AAMI,QAAA,QAAQ,EAAEpB,KAAK,CAACQ;AANpB,QADJ,EASI,oBAAC,SAAD,QACKtC,UAAU,CAAC8B,KAAD,EAAQrB,UAAU,CAACD,KAAD,EAAQT,OAAR,CAAlB,CAAV,CACIsC,KADJ,CACUE,IAAI,GAAGC,WADjB,EAC8BD,IAAI,GAAGC,WAAP,GAAqBA,WADnD,EAEIpC,GAFJ,CAEQ,UAAA2B,CAAC,EAAI;AACN,YAAMoB,UAAU,GAAG,MAAI,CAACA,UAAL,CAAgBpB,CAAC,CAACC,EAAlB,CAAnB;;AACA,eACI,oBAAC,QAAD;AACI,UAAA,KAAK,MADT;AAEI,UAAA,OAAO,EAAE,iBAAAT,KAAK;AAAA,mBAAI,MAAI,CAAC6B,WAAL,CAAiB7B,KAAjB,EAAwBQ,CAAC,CAACC,EAA1B,CAAJ;AAAA,WAFlB;AAGI,UAAA,IAAI,EAAC,UAHT;AAII,0BAAcmB,UAJlB;AAKI,UAAA,QAAQ,EAAE,CAAC,CALf;AAMI,UAAA,GAAG,EAAEpB,CAAC,CAACC,EANX;AAOI,UAAA,QAAQ,EAAEmB;AAPd,WASI,oBAAC,SAAD;AAAW,UAAA,OAAO,EAAC;AAAnB,WACI,oBAAC,QAAD;AAAU,UAAA,OAAO,EAAEA,UAAnB;AAA+B,UAAA,KAAK,EAAC;AAArC,UADJ,CATJ,EAYMN,KAAK,CAACzC,GAAN,CAAU,UAACqC,KAAD,EAAQnC,KAAR,EAAkB;AAC1B,iBACI,oBAAC,SAAD;AAAW,YAAA,GAAG,EAAEA,KAAhB;AAAuB,YAAA,OAAO,EAAC;AAA/B,aACMyB,CAAC,CAACU,KAAD,CADP,CADJ;AAKH,SANC,CAZN,CADJ;AAsBH,OA1BJ,CADL,EA4BKK,SAAS,GAAG,CAAZ,IACG,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE;AAAEO,UAAAA,MAAM,EAAE,KAAKP;AAAf;AAAjB,SACI,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAE;AAApB,QADJ,CA7BR,CATJ,CADJ,CAHJ,EAiDI,oBAAC,eAAD;AACI,QAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,GAAxB,CADxB;AAEI,QAAA,SAAS,EAAC,KAFd;AAGI,QAAA,KAAK,EAAEhB,KAAK,CAACQ,MAHjB;AAII,QAAA,WAAW,EAAEE,WAJjB;AAKI,QAAA,IAAI,EAAED,IALV;AAMI,QAAA,mBAAmB,EAAE;AACjB,wBAAc;AADG,SANzB;AASI,QAAA,mBAAmB,EAAE;AACjB,wBAAc;AADG,SATzB;AAYI,QAAA,YAAY,EAAE,KAAKe,gBAZvB;AAaI,QAAA,mBAAmB,EAAE,KAAKC;AAb9B,QAjDJ,CADJ;AAmEH;;;;EAvIuBvE,KAAK,CAACwE,S;;AA0IlCnC,aAAa,CAACoC,SAAd,GAA0B;AACtBd,EAAAA,OAAO,EAAE1D,SAAS,CAACyE,MAAV,CAAiBC,UADJ;AAEtBf,EAAAA,QAAQ,EAAE3D,SAAS,CAAC2E,MAAV,CAAiBD;AAFL,CAA1B;AAKA,eAAezE,UAAU,CAACwB,MAAD,CAAV,CAAmBW,aAAnB,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { EnhancedTableHead } from './components/EnhancedTableHead';\r\nimport { EnhancedTableToolBar } from './components/EnhancedTableToolBar';\r\n\r\n\r\nfunction desc(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = cmp(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n    },\r\n    table: {\r\n        minWidth: 1020,\r\n    },\r\n    tableWrapper: {\r\n        overflowX: 'auto',\r\n    }\r\n});\r\n\r\nclass EnhancedTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            order: 'asc',\r\n            orderBy: 'calories',\r\n            data: [],\r\n            selected: [],\r\n            page: 0,\r\n            rowsPerPage: 10\r\n        }\r\n    }\r\n\r\n\r\n    handleRequestSort = (event, property) => {\r\n        const orderBy = property;\r\n        let order = 'desc';\r\n\r\n        if (this.state.orderBy === property && this.state.order === 'desc') {\r\n            order = 'asc';\r\n        }\r\n\r\n        this.setState({ order, orderBy });\r\n    };\r\n\r\n    handleSelectAllClick = event => {\r\n        if (event.target.checked) {\r\n            this.setState({ selected: this.props.datas.map(n => n.id) });\r\n            return;\r\n        }\r\n        this.setState({ selected: [] });\r\n    };\r\n\r\n    handleClick = (event, id) => {\r\n        const { selected } = this.state;\r\n        const selectedIndex = selected.indexOf(id);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, id);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        this.setState({ selected: newSelected });\r\n    };\r\n\r\n    handleChangePage = (event, page) => {\r\n        this.setState({ page });\r\n    };\r\n\r\n    handleChangeRowsPerPage = event => {\r\n        this.setState({ rowsPerPage: event.target.value });\r\n    };\r\n\r\n    isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n\r\n    render() {\r\n        const { classes, listName, datas, cells } = this.props;\r\n        const { order, orderBy, selected, rowsPerPage, page } = this.state;\r\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, datas.length - page * rowsPerPage);\r\n        return (\r\n            <Paper className={classes.root}>\r\n                <EnhancedTableToolBar numSelected={selected.length} listName={listName} />\r\n                <hr className=\"tall\" />\r\n                <div className={classes.tableWrapper}>\r\n                    <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n                        <EnhancedTableHead\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={this.handleSelectAllClick}\r\n                            onRequestSort={this.handleRequestSort}\r\n                            rowCount={datas.length}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(datas, getSorting(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map(n => {\r\n                                    const isSelected = this.isSelected(n.id);\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            onClick={event => this.handleClick(event, n.id)}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isSelected}\r\n                                            tabIndex={-1}\r\n                                            key={n.id}\r\n                                            selected={isSelected}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox checked={isSelected} color=\"default\" />\r\n                                            </TableCell>\r\n                                            { cells.map((value, index) => {\r\n                                                return (\r\n                                                    <TableCell key={index} padding=\"default\">\r\n                                                        { n[value] }\r\n                                                    </TableCell>\r\n                                                );\r\n                                            }) }\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: 49 * emptyRows }}>\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </div>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 15, 25, 50, 75, 100]}\r\n                    component=\"div\"\r\n                    count={datas.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    backIconButtonProps={{\r\n                        'aria-label': 'Previous Page',\r\n                    }}\r\n                    nextIconButtonProps={{\r\n                        'aria-label': 'Next Page',\r\n                    }}\r\n                    onChangePage={this.handleChangePage}\r\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nEnhancedTable.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    listName: PropTypes.string.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(EnhancedTable);"]}]}