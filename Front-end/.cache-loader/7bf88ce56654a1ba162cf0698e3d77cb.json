{"remainingRequest":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js!E:\\QuanLyDaoTao\\Front-end\\src\\app\\scenes\\pages\\ManageClass\\TabBars\\Years\\EnhancedTableYear\\EnhancedTableYear.jsx","dependencies":[{"path":"E:\\QuanLyDaoTao\\Front-end\\src\\app\\scenes\\pages\\ManageClass\\TabBars\\Years\\EnhancedTableYear\\EnhancedTableYear.jsx","mtime":1559066575271},{"path":"E:\\QuanLyDaoTao\\Front-end\\.babelrc","mtime":1554785266000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport { connect } from 'react-redux';\nimport { yearsShape } from '../../../../../propTypes';\nimport { yearsOperations } from '../../../../../../state/ducks/years';\nimport { popupOperations } from '../../../../../../state/ducks/popup';\nimport { EnhancedTableHead } from '../../../../../components/Table/EnhancedTableHead';\nimport { EnhancedTableToolBar } from './components/EnhancedTableToolBar';\nimport { ImageAvatars } from '../../../../../components/ImageAvatars';\nimport Skeleton from 'react-loading-skeleton';\nimport LazyLoad from 'react-lazyload';\nimport styles from './styles.css';\nimport { PopupFormEditYear } from '../../../../../components/Popup/PopupFormEditYear';\nimport { PopupDelete } from '../../../../../components/Popup/PopupDelete';\nvar rows = [{\n  id: 'id',\n  numeric: false,\n  disablePadding: false,\n  label: 'ID'\n}, {\n  id: 'name',\n  numeric: false,\n  disablePadding: false,\n  label: 'Tên năm học'\n}, {\n  id: 'startYears',\n  numeric: false,\n  disablePadding: false,\n  label: 'Năm học'\n}, {\n  id: 'openDay',\n  numeric: false,\n  disablePadding: false,\n  label: 'Ngày khai giảng'\n}, {\n  id: 'closeDay',\n  numeric: false,\n  disablePadding: false,\n  label: 'Ngày bế giảng'\n}, {\n  id: 'maximumClasses',\n  numeric: false,\n  disablePadding: false,\n  label: 'Số khóa học tối đa'\n}, {\n  id: 'status',\n  numeric: false,\n  disablePadding: false,\n  label: 'Trạng thái'\n}, {\n  id: 'edit',\n  numeric: false,\n  disablePadding: false,\n  label: 'Tác vụ'\n}];\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  var stabilizedThis = array.map(function (el, index) {\n    return [el, index];\n  });\n  stabilizedThis.sort(function (a, b) {\n    var order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(function (el) {\n    return el[0];\n  });\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? function (a, b) {\n    return desc(a, b, orderBy);\n  } : function (a, b) {\n    return -desc(a, b, orderBy);\n  };\n}\n\nvar style = function style(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      boxShadow: 'none',\n      padding: '0 24px'\n    },\n    table: {\n      minWidth: 1020\n    },\n    tableWrapper: {\n      overflowX: 'auto'\n    },\n    chip: {\n      margin: theme.spacing.unit,\n      backgroundColor: '#455e6b'\n    }\n  };\n};\n\nvar EnhancedTableYear =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EnhancedTableYear, _React$Component);\n\n  function EnhancedTableYear(props) {\n    var _this;\n\n    _classCallCheck(this, EnhancedTableYear);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EnhancedTableYear).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRequestSort\", function (event, property) {\n      var orderBy = property;\n      var order = 'desc';\n\n      if (_this.state.orderBy === property && _this.state.order === 'desc') {\n        order = 'asc';\n      }\n\n      _this.setState({\n        order: order,\n        orderBy: orderBy\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelectAllClick\", function (event) {\n      if (event.target.checked) {\n        _this.setState({\n          selected: _this.props.years.map(function (n) {\n            return n.id;\n          })\n        });\n\n        return;\n      }\n\n      _this.setState({\n        selected: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (event, id) {\n      var selected = _this.state.selected;\n      var selectedIndex = selected.indexOf(id);\n      var newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      _this.setState({\n        selected: newSelected\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOpenForm\", function (id) {\n      // this.props.findAccountById(id);\n      _this.props.openForm();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isSelected\", function (id) {\n      return _this.state.selected.indexOf(id) !== -1;\n    });\n\n    _this.state = {\n      order: 'asc',\n      orderBy: 'calories',\n      selected: [],\n      page: 0,\n      rowsPerPage: 10\n    };\n    return _this;\n  }\n\n  _createClass(EnhancedTableYear, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getAllYears();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          listName = _this$props.listName,\n          years = _this$props.years,\n          accountById = _this$props.accountById;\n      var _this$state = this.state,\n          order = _this$state.order,\n          orderBy = _this$state.orderBy,\n          selected = _this$state.selected,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page;\n      return React.createElement(Paper, {\n        className: classes.root\n      }, React.createElement(PopupFormEditYear, null), React.createElement(PopupDelete, {\n        delete: this.deleteData\n      }), React.createElement(EnhancedTableToolBar, {\n        numSelected: selected.length,\n        listName: listName,\n        actionDelete: this.handleDelete\n      }), React.createElement(\"div\", {\n        style: {\n          padding: '10px 0 15px 24px'\n        },\n        className: \"message\"\n      }, React.createElement(\"div\", null, React.createElement(\"b\", null, \"Ch\\xFA \\xFD:\")), React.createElement(\"ul\", null, React.createElement(\"li\", null, \"- Danh s\\xE1ch d\\u01B0\\u1EDBi bao g\\u1ED3m c\\xE1c n\\u0103m h\\u1ECDc trong ch\\u01B0\\u01A1ng tr\\xECnh \\u0111\\xE0o t\\u1EA1o.\"), React.createElement(\"li\", null, \"- M\\u1ED7i n\\u0103m h\\u1ECDc s\\u1EBD c\\xF3 c\\xE1c l\\u1EDBp \\u0111\\u01B0\\u1EE3c m\\u1EDF t\\u01B0\\u01A1ng \\u1EE9ng.\"), React.createElement(\"li\", null, \"- Khi k\\u1EBFt th\\xFAc n\\u0103m h\\u1ECDc b\\u1EA1n c\\xF3 th\\u1EC3 \\u0111\\xF3ng n\\u0103m h\\u1ECDc \\u0111\\xF3 l\\u1EA1i thay v\\xEC x\\xF3a.\"), React.createElement(\"li\", null, \"- Trong tr\\u01B0\\u1EDDng h\\u1EE3p mu\\u1ED1n x\\xF3a n\\u0103m h\\u1ECDc, b\\u1EA1n h\\xE3y ch\\u1EAFc ch\\u1EAFn r\\u1EB1ng mu\\u1ED1n x\\xF3a t\\u1EA5t c\\u1EA3 d\\u1EEF li\\u1EC7u trong n\\u0103m h\\u1ECDc v\\xE0 kh\\xF4ng th\\u1EC3 kh\\xF4i ph\\u1EE5c.\"))), React.createElement(\"div\", {\n        className: classes.tableWrapper\n      }, React.createElement(Table, {\n        className: classes.table,\n        \"aria-labelledby\": \"tableTitle\"\n      }, React.createElement(EnhancedTableHead, {\n        numSelected: selected.length,\n        order: order,\n        orderBy: orderBy,\n        onSelectAllClick: this.handleSelectAllClick,\n        onRequestSort: this.handleRequestSort,\n        rowCount: years.length,\n        rows: rows\n      }), React.createElement(TableBody, null, stableSort(years, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (n) {\n        var isSelected = _this2.isSelected(n.id);\n\n        return React.createElement(LazyLoad, null, React.createElement(TableRow, {\n          hover: true,\n          role: \"checkbox\",\n          \"aria-checked\": isSelected,\n          tabIndex: -1,\n          key: n.id,\n          selected: isSelected\n        }, React.createElement(TableCell, {\n          padding: \"checkbox\",\n          onClick: function onClick(event) {\n            return _this2.handleClick(event, n.id);\n          }\n        }, React.createElement(Checkbox, {\n          checked: isSelected,\n          color: \"default\"\n        })), React.createElement(TableCell, {\n          className: \"cell\"\n        }, React.createElement(\"b\", null, n.id || React.createElement(Skeleton, null))), React.createElement(TableCell, {\n          className: \"cell\"\n        }, n.name || React.createElement(Skeleton, null)), React.createElement(TableCell, {\n          className: \"cell\"\n        }, React.createElement(Chip, {\n          label: React.createElement(\"b\", null, n.startYears),\n          color: \"inherit\",\n          title: React.createElement(\"b\", null, n.startYears)\n        }) || React.createElement(Skeleton, null)), React.createElement(TableCell, {\n          className: \"cell\"\n        }, n.openDay || React.createElement(Skeleton, null)), React.createElement(TableCell, {\n          className: \"cell\"\n        }, n.closeDay || React.createElement(Skeleton, null)), React.createElement(TableCell, {\n          className: \"cell\"\n        }, n.maximumClasses || React.createElement(Skeleton, null)), React.createElement(TableCell, {\n          className: \"cell\"\n        }, (n.status ? React.createElement(Chip, {\n          icon: React.createElement(CheckCircleIcon, null),\n          label: \"K\\xEDch ho\\u1EA1t\",\n          color: \"primary\",\n          className: classes.chip,\n          title: \"K\\xEDch ho\\u1EA1t\"\n        }) : React.createElement(Chip, {\n          icon: React.createElement(RemoveCircleIcon, null),\n          label: \"Ch\\u01B0a k\\xEDch ho\\u1EA1t\",\n          color: \"inherit\",\n          title: \"Ch\\u01B0a k\\xEDch ho\\u1EA1t\"\n        })) || React.createElement(Skeleton, null)), React.createElement(TableCell, {\n          className: \"cell\"\n        }, React.createElement(Button, {\n          className: \"btn\",\n          onClick: function onClick() {\n            return _this2.handleOpenForm(n.id);\n          },\n          variant: \"contained\",\n          style: {\n            backgroundColor: '#17b304',\n            color: '#fff',\n            minWidth: 0,\n            padding: '5px'\n          },\n          title: \"Ch\\u1EC9nh s\\u1EEDa th\\xF4ng tin t\\xE0i kho\\u1EA3n\"\n        }, React.createElement(LaunchIcon, null)) || React.createElement(Skeleton, null))));\n      }), years.length <= 0 && React.createElement(TableRow, null, React.createElement(TableCell, {\n        colSpan: 9\n      }, React.createElement(Skeleton, {\n        count: 10,\n        height: 50,\n        duration: 2\n      })))))), React.createElement(TablePagination, {\n        rowsPerPageOptions: [10, 15, 25, 50, 75, 100],\n        component: \"div\",\n        count: years.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          'aria-label': 'Previous Page'\n        },\n        nextIconButtonProps: {\n          'aria-label': 'Next Page'\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.handleChangeRowsPerPage\n      }));\n    }\n  }]);\n\n  return EnhancedTableYear;\n}(React.Component);\n\nEnhancedTableYear.propTypes = {\n  classes: PropTypes.object.isRequired,\n  years: PropTypes.arrayOf(yearsShape).isRequired,\n  getAllYears: PropTypes.func.isRequired,\n  toggleEditYears: PropTypes.func.isRequired\n};\nEnhancedTableYear.defaultProps = {\n  years: []\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    years: state.years.allYears\n  };\n};\n\nvar mapDispatchToProps = {\n  getAllYears: yearsOperations.getAllYears,\n  openForm: yearsOperations.openFormEdit\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(EnhancedTableYear));",{"version":3,"sources":["E:\\QuanLyDaoTao\\Front-end\\src\\app\\scenes\\pages\\ManageClass\\TabBars\\Years\\EnhancedTableYear\\EnhancedTableYear.jsx"],"names":["React","Suspense","PropTypes","withStyles","Table","TableBody","TableCell","TablePagination","TableRow","Paper","Button","LaunchIcon","Checkbox","Chip","CheckCircleIcon","RemoveCircleIcon","connect","yearsShape","yearsOperations","popupOperations","EnhancedTableHead","EnhancedTableToolBar","ImageAvatars","Skeleton","LazyLoad","styles","PopupFormEditYear","PopupDelete","rows","id","numeric","disablePadding","label","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","style","theme","root","width","marginTop","spacing","unit","boxShadow","padding","table","minWidth","tableWrapper","overflowX","chip","margin","backgroundColor","EnhancedTableYear","props","event","property","state","setState","target","checked","selected","years","n","selectedIndex","indexOf","newSelected","concat","slice","length","openForm","page","rowsPerPage","getAllYears","classes","listName","accountById","deleteData","handleDelete","handleSelectAllClick","handleRequestSort","isSelected","handleClick","name","startYears","openDay","closeDay","maximumClasses","status","handleOpenForm","color","handleChangePage","handleChangeRowsPerPage","Component","propTypes","object","isRequired","arrayOf","func","toggleEditYears","defaultProps","mapStateToProps","allYears","mapDispatchToProps","openFormEdit"],"mappings":"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","sourcesContent":["import React, { Suspense } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport { connect } from 'react-redux';\r\nimport { yearsShape } from '../../../../../propTypes';\r\nimport { yearsOperations } from '../../../../../../state/ducks/years';\r\nimport { popupOperations } from '../../../../../../state/ducks/popup';\r\nimport { EnhancedTableHead } from '../../../../../components/Table/EnhancedTableHead';\r\nimport { EnhancedTableToolBar } from './components/EnhancedTableToolBar';\r\nimport { ImageAvatars } from '../../../../../components/ImageAvatars';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport LazyLoad from 'react-lazyload';\r\nimport styles from './styles.css';\r\nimport { PopupFormEditYear } from '../../../../../components/Popup/PopupFormEditYear';\r\nimport { PopupDelete } from '../../../../../components/Popup/PopupDelete';\r\n\r\nconst rows = [\r\n    { id: 'id', numeric: false, disablePadding: false, label: 'ID' },\r\n    { id: 'name', numeric: false, disablePadding: false, label: 'Tên năm học' },\r\n    { id: 'startYears', numeric: false, disablePadding: false, label: 'Năm học' },\r\n    { id: 'openDay', numeric: false, disablePadding: false, label: 'Ngày khai giảng' },\r\n    { id: 'closeDay', numeric: false, disablePadding: false, label: 'Ngày bế giảng' },\r\n    { id: 'maximumClasses', numeric: false, disablePadding: false, label: 'Số khóa học tối đa' },\r\n    { id: 'status', numeric: false, disablePadding: false, label: 'Trạng thái' },\r\n    { id: 'edit', numeric: false, disablePadding: false, label: 'Tác vụ' }\r\n]\r\n\r\nfunction desc(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = cmp(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst style = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        boxShadow: 'none',\r\n        padding: '0 24px'\r\n    },\r\n    table: {\r\n        minWidth: 1020,\r\n    },\r\n    tableWrapper: {\r\n        overflowX: 'auto',\r\n    },\r\n    chip: {\r\n        margin: theme.spacing.unit,\r\n        backgroundColor: '#455e6b'\r\n    },\r\n});\r\n\r\nclass EnhancedTableYear extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            order: 'asc',\r\n            orderBy: 'calories',\r\n            selected: [],\r\n            page: 0,\r\n            rowsPerPage: 10\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAllYears();\r\n    }\r\n\r\n    handleRequestSort = (event, property) => {\r\n        const orderBy = property;\r\n        let order = 'desc';\r\n\r\n        if (this.state.orderBy === property && this.state.order === 'desc') {\r\n            order = 'asc';\r\n        }\r\n\r\n        this.setState({ order, orderBy });\r\n    };\r\n\r\n    handleSelectAllClick = event => {\r\n        if (event.target.checked) {\r\n            this.setState({ selected: this.props.years.map(n => n.id) });\r\n            return;\r\n        }\r\n        this.setState({ selected: [] });\r\n    };\r\n\r\n    handleClick = (event, id) => {\r\n        const { selected } = this.state;\r\n        const selectedIndex = selected.indexOf(id);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, id);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        this.setState({ selected: newSelected });\r\n    };\r\n\r\n    handleOpenForm = (id) => {\r\n        // this.props.findAccountById(id);\r\n        this.props.openForm();\r\n    }\r\n\r\n    // handleChangePage = (event, page) => {\r\n    //     this.setState({ page });\r\n    // };\r\n\r\n    // handleOpenForm = (id) => {\r\n    //     this.props.findAccountById(id);\r\n    //     this.props.openForm();\r\n    // }\r\n\r\n    // handleChangeRowsPerPage = event => {\r\n    //     this.setState({ rowsPerPage: event.target.value });\r\n    // };\r\n\r\n    // handleDelete = (param) => {\r\n    //     this.props.openPopupDelete();\r\n    // }\r\n\r\n    // deleteData = (param) => {\r\n    //     this.props.deleteUserAccount(this.state.selected);\r\n    // }\r\n\r\n    isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n\r\n    render() {\r\n        const { classes, listName, years, accountById } = this.props;\r\n        const { order, orderBy, selected, rowsPerPage, page } = this.state;\r\n        return (\r\n            <Paper className={classes.root}>\r\n                {/* {accountById.id ?\r\n                 : ''} */}\r\n                <PopupFormEditYear />\r\n                <PopupDelete delete={this.deleteData} />\r\n                <EnhancedTableToolBar numSelected={selected.length} listName={listName} actionDelete={this.handleDelete} />\r\n                <div style={{ padding: '10px 0 15px 24px' }} className=\"message\">\r\n                    <div>\r\n                        <b>Chú ý:</b>\r\n                    </div>\r\n                    <ul>\r\n                        <li>- Danh sách dưới bao gồm các năm học trong chương trình đào tạo.</li>\r\n                        <li>- Mỗi năm học sẽ có các lớp được mở tương ứng.</li>\r\n                        <li>- Khi kết thúc năm học bạn có thể đóng năm học đó lại thay vì xóa.</li>\r\n                        <li>- Trong trường hợp muốn xóa năm học, bạn hãy chắc chắn rằng muốn xóa tất cả dữ liệu trong năm học và không thể khôi phục.</li>\r\n                    </ul>\r\n                </div>\r\n                <div className={classes.tableWrapper}>\r\n                    <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n                        <EnhancedTableHead\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={this.handleSelectAllClick}\r\n                            onRequestSort={this.handleRequestSort}\r\n                            rowCount={years.length}\r\n                            rows={rows}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(years, getSorting(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map(n => {\r\n                                    const isSelected = this.isSelected(n.id);\r\n                                    return (\r\n                                        <LazyLoad>\r\n                                            <TableRow\r\n                                                hover\r\n                                                role=\"checkbox\"\r\n                                                aria-checked={isSelected}\r\n                                                tabIndex={-1}\r\n                                                key={n.id}\r\n                                                selected={isSelected}\r\n                                            >\r\n                                                <TableCell padding=\"checkbox\" onClick={event => this.handleClick(event, n.id)}>\r\n                                                    <Checkbox checked={isSelected} color=\"default\" />\r\n                                                </TableCell>\r\n                                                <TableCell className=\"cell\">\r\n                                                    <b>{n.id || <Skeleton />}</b>\r\n                                                </TableCell>\r\n                                                <TableCell className=\"cell\">\r\n                                                    {n.name || <Skeleton />}\r\n                                                </TableCell>\r\n                                                <TableCell className=\"cell\">\r\n                                                    {<Chip\r\n                                                        label={<b>{n.startYears}</b>}\r\n                                                        color=\"inherit\"\r\n                                                        title={<b>{n.startYears}</b>}\r\n                                                    /> || <Skeleton />}\r\n                                                </TableCell>\r\n                                                <TableCell className=\"cell\">\r\n                                                    {n.openDay || <Skeleton />}\r\n                                                </TableCell>\r\n                                                <TableCell className=\"cell\">\r\n                                                    {n.closeDay || <Skeleton />}\r\n                                                </TableCell>\r\n                                                <TableCell className=\"cell\">\r\n                                                    {n.maximumClasses || <Skeleton />}\r\n                                                </TableCell>\r\n                                                <TableCell className=\"cell\">\r\n                                                    {(n.status ? <Chip\r\n                                                        icon={<CheckCircleIcon />}\r\n                                                        label=\"Kích hoạt\"\r\n                                                        color=\"primary\"\r\n                                                        className={classes.chip}\r\n                                                        title=\"Kích hoạt\"\r\n                                                    /> : <Chip\r\n                                                            icon={<RemoveCircleIcon />}\r\n                                                            label=\"Chưa kích hoạt\"\r\n                                                            color=\"inherit\"\r\n                                                            title=\"Chưa kích hoạt\"\r\n                                                    />) || <Skeleton />}\r\n                                                </TableCell>\r\n                                                <TableCell className=\"cell\">\r\n                                                    {<Button className=\"btn\" onClick={() => this.handleOpenForm(n.id)} variant=\"contained\" style={{ backgroundColor: '#17b304', color: '#fff', minWidth: 0, padding: '5px' }}\r\n                                                        title=\"Chỉnh sửa thông tin tài khoản\">\r\n                                                        <LaunchIcon />\r\n                                                    </Button> || <Skeleton />}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </LazyLoad>\r\n                                    );\r\n                                })}\r\n                            {years.length <= 0 && (\r\n                                <TableRow>\r\n                                    <TableCell colSpan={9}>\r\n                                        <Skeleton count={10} height={50} duration={2} />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </div>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 15, 25, 50, 75, 100]}\r\n                    component=\"div\"\r\n                    count={years.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    backIconButtonProps={{\r\n                        'aria-label': 'Previous Page',\r\n                    }}\r\n                    nextIconButtonProps={{\r\n                        'aria-label': 'Next Page',\r\n                    }}\r\n                    onChangePage={this.handleChangePage}\r\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nEnhancedTableYear.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    years: PropTypes.arrayOf(yearsShape).isRequired,\r\n    getAllYears: PropTypes.func.isRequired,\r\n    toggleEditYears: PropTypes.func.isRequired,\r\n};\r\n\r\nEnhancedTableYear.defaultProps = {\r\n    years: []\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    years: state.years.allYears,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getAllYears: yearsOperations.getAllYears,\r\n    openForm: yearsOperations.openFormEdit\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(EnhancedTableYear));"]}]}