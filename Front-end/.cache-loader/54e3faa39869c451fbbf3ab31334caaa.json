{"remainingRequest":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js!E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\utils\\fetch.js","dependencies":[{"path":"E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\utils\\fetch.js","mtime":1554508515028},{"path":"E:\\QuanLyDaoTao\\Front-end\\.babelrc","mtime":1552065940191},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import isomorphicFetch from \"isomorphic-fetch\";\nexport default (function (url, method, body) {\n  var options = {\n    method: method,\n    headers: requestHeaders(),\n    body: method !== \"GET\" ? JSON.stringify(body) : null\n  };\n  return isomorphicFetch(url, options).then(function (res) {\n    return parseStatus(res.status, res.json());\n  });\n});\n\nfunction requestHeaders() {\n  return {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  };\n}\n\nfunction parseStatus(status, res) {\n  return new Promise(function (resolve, reject) {\n    if (status >= 200 && status < 300) {\n      res.then(function (response) {\n        return resolve(response);\n      });\n    } else {\n      res.then(function (response) {\n        return reject({\n          status: status,\n          response: response\n        });\n      });\n    }\n  });\n}",{"version":3,"sources":["E:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\utils\\fetch.js"],"names":["isomorphicFetch","url","method","body","options","headers","requestHeaders","JSON","stringify","then","res","parseStatus","status","json","Accept","Promise","resolve","reject","response"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,kBAA5B;AAEA,gBAAe,UAACC,GAAD,EAAMC,MAAN,EAAcC,IAAd,EAAuB;AAClC,MAAMC,OAAO,GAAG;AACZF,IAAAA,MAAM,EAANA,MADY;AAEZG,IAAAA,OAAO,EAAEC,cAAc,EAFX;AAGZH,IAAAA,IAAI,EAAED,MAAM,KAAK,KAAX,GAAmBK,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAnB,GAA0C;AAHpC,GAAhB;AAKA,SAAOH,eAAe,CAACC,GAAD,EAAMG,OAAN,CAAf,CACFK,IADE,CACG,UAAAC,GAAG;AAAA,WAAIC,WAAW,CAACD,GAAG,CAACE,MAAL,EAAaF,GAAG,CAACG,IAAJ,EAAb,CAAf;AAAA,GADN,CAAP;AAEH,CARD;;AAWA,SAASP,cAAT,GAA0B;AACtB,SAAO;AACHQ,IAAAA,MAAM,EAAE,kBADL;AAEH,oBAAgB;AAFb,GAAP;AAIH;;AAED,SAASH,WAAT,CAAqBC,MAArB,EAA6BF,GAA7B,EAAkC;AAC9B,SAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAIL,MAAM,IAAI,GAAV,IAAiBA,MAAM,GAAG,GAA9B,EAAmC;AAC/BF,MAAAA,GAAG,CAACD,IAAJ,CAAS,UAAAS,QAAQ;AAAA,eAAIF,OAAO,CAACE,QAAD,CAAX;AAAA,OAAjB;AACH,KAFD,MAEO;AACHR,MAAAA,GAAG,CAACD,IAAJ,CAAS,UAAAS,QAAQ;AAAA,eAAID,MAAM,CAAC;AACxBL,UAAAA,MAAM,EAANA,MADwB;AAExBM,UAAAA,QAAQ,EAARA;AAFwB,SAAD,CAAV;AAAA,OAAjB;AAIH;AACJ,GATM,CAAP;AAUH","sourcesContent":["import isomorphicFetch from \"isomorphic-fetch\";\r\n\r\nexport default (url, method, body) => {\r\n    const options = {\r\n        method,\r\n        headers: requestHeaders(),\r\n        body: method !== \"GET\" ? JSON.stringify(body) : null,\r\n    }\r\n    return isomorphicFetch(url, options)\r\n        .then(res => parseStatus(res.status, res.json()));\r\n}\r\n\r\n\r\nfunction requestHeaders() {\r\n    return {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n    };\r\n}\r\n\r\nfunction parseStatus(status, res) {\r\n    return new Promise((resolve, reject) => {\r\n        if (status >= 200 && status < 300) {\r\n            res.then(response => resolve(response));\r\n        } else {\r\n            res.then(response => reject({\r\n                status,\r\n                response\r\n            }));\r\n        }\r\n    });\r\n}"]}]}