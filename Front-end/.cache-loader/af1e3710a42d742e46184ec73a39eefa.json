{"remainingRequest":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js!E:\\QuanLyDaoTao\\Front-end\\src\\app\\scenes\\components\\Buttons\\ButtonEdit\\ButtonEdit.jsx","dependencies":[{"path":"E:\\QuanLyDaoTao\\Front-end\\src\\app\\scenes\\components\\Buttons\\ButtonEdit\\ButtonEdit.jsx","mtime":1560099565683},{"path":"E:\\QuanLyDaoTao\\Front-end\\.babelrc","mtime":1560160717751},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var REACT_ELEMENT_TYPE;\n\nfunction _jsx(type, props, key, children) { if (!REACT_ELEMENT_TYPE) { REACT_ELEMENT_TYPE = typeof Symbol === \"function\" && Symbol.for && Symbol.for(\"react.element\") || 0xeac7; } var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = { children: void 0 }; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = new Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }\n\nimport React from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nvar _ref =\n/*#__PURE__*/\n_jsx(LaunchIcon, {});\n\nfunction ButtonEdit(props) {\n  var title = props.title,\n      id = props.id,\n      to = props.to;\n  return _jsx(Tooltip, {\n    title: title\n  }, void 0, _jsx(Button, {\n    component: Link,\n    to: to,\n    variant: \"contained\",\n    style: {\n      backgroundColor: '#17b304',\n      color: '#fff',\n      minWidth: 0,\n      padding: '5px'\n    }\n  }, void 0, _ref));\n}\n\nButtonEdit.defaultProps = {\n  title: '',\n  id: 0\n};\nButtonEdit.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired\n};\nexport default ButtonEdit;",{"version":3,"sources":["E:\\QuanLyDaoTao\\Front-end\\src\\app\\scenes\\components\\Buttons\\ButtonEdit\\ButtonEdit.jsx"],"names":["React","Tooltip","Button","PropTypes","Link","LaunchIcon","ButtonEdit","props","title","id","to","backgroundColor","color","minWidth","padding","defaultProps","propTypes","string","isRequired","number"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;;;AAYgB,KAAC,UAAD,K;;AAVhB,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAAA,MAChBC,KADgB,GACED,KADF,CAChBC,KADgB;AAAA,MACTC,EADS,GACEF,KADF,CACTE,EADS;AAAA,MACLC,EADK,GACEH,KADF,CACLG,EADK;AAExB,SACI,KAAC,OAAD;AAAS,IAAA,KAAK,EAAEF;AAAhB,aACI,KAAC,MAAD;AACI,IAAA,SAAS,EAAEJ,IADf;AAEI,IAAA,EAAE,EAAEM,EAFR;AAGI,IAAA,OAAO,EAAC,WAHZ;AAII,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,SAAnB;AAA8BC,MAAAA,KAAK,EAAE,MAArC;AAA6CC,MAAAA,QAAQ,EAAE,CAAvD;AAA0DC,MAAAA,OAAO,EAAE;AAAnE;AAJX,kBADJ,CADJ;AAYH;;AAEDR,UAAU,CAACS,YAAX,GAA0B;AACtBP,EAAAA,KAAK,EAAE,EADe;AAEtBC,EAAAA,EAAE,EAAE;AAFkB,CAA1B;AAKAH,UAAU,CAACU,SAAX,GAAuB;AACnBR,EAAAA,KAAK,EAAEL,SAAS,CAACc,MAAV,CAAiBC,UADL;AAEnBT,EAAAA,EAAE,EAAEN,SAAS,CAACgB,MAAV,CAAiBD;AAFF,CAAvB;AAKA,eAAeZ,UAAf","sourcesContent":["import React from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\n\r\nfunction ButtonEdit (props) {\r\n    const { title, id, to } = props;\r\n    return (\r\n        <Tooltip title={title}>\r\n            <Button \r\n                component={Link}\r\n                to={to}\r\n                variant=\"contained\" \r\n                style={{ backgroundColor: '#17b304', color: '#fff', minWidth: 0, padding: '5px' }}\r\n            >\r\n                <LaunchIcon />\r\n            </Button>\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nButtonEdit.defaultProps = {\r\n    title: '',\r\n    id: 0\r\n}\r\n\r\nButtonEdit.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired\r\n}\r\n\r\nexport default ButtonEdit;\r\n"]}]}