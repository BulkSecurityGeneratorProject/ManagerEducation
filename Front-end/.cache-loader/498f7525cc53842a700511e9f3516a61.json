{"remainingRequest":"D:\\ManageEducation\\ManagerEducation\\Front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ManageEducation\\ManagerEducation\\Front-end\\src\\app\\scenes\\pages\\LoginPage\\Panel\\components\\FormPanel\\FormPanel.jsx","dependencies":[{"path":"D:\\ManageEducation\\ManagerEducation\\Front-end\\src\\app\\scenes\\pages\\LoginPage\\Panel\\components\\FormPanel\\FormPanel.jsx","mtime":1556466111967},{"path":"D:\\ManageEducation\\ManagerEducation\\Front-end\\.babelrc","mtime":1555478544709},{"path":"D:\\ManageEducation\\ManagerEducation\\Front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ManageEducation\\ManagerEducation\\Front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport styles from './styles.css';\nimport Recaptcha from 'react-recaptcha';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { formLoginShape } from '../../../../../propTypes';\nimport { sessionOperations } from '../../../../../../state/ducks/session';\nvar recaptchaInstance;\n\nvar FormPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormPanel, _Component);\n\n  function FormPanel(props) {\n    var _this;\n\n    _classCallCheck(this, FormPanel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormPanel).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      if (name === \"rememberMe\") {\n        _this.setState({\n          rememberMe: JSON.parse(value)\n        });\n      } else {\n        _this.setState(_defineProperty({}, name, value));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          username = _this$state.username,\n          password = _this$state.password,\n          rememberMe = _this$state.rememberMe,\n          isVerifyCaptcha = _this$state.isVerifyCaptcha; // login if not errors\n\n      if (isVerifyCaptcha) _this.props.login(username, password, rememberMe);\n\n      _this.resetRecaptcha();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"callback\", function () {});\n\n    _defineProperty(_assertThisInitialized(_this), \"verifyCallback\", function (res) {\n      if (res) {\n        _this.setState({\n          isVerifyCaptcha: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resetRecaptcha\", function () {\n      recaptchaInstance.reset();\n\n      _this.setState({\n        isVerifyCaptcha: false\n      });\n    });\n\n    _this.state = {\n      username: '',\n      password: '',\n      rememberMe: false,\n      isVerifyCaptcha: false\n    };\n    return _this;\n  }\n\n  _createClass(FormPanel, [{\n    key: \"render\",\n    value: function render() {\n      var isVerifyCaptcha = this.state.isVerifyCaptcha;\n      var isAuth = this.props.isAuth;\n      var error = false;\n\n      if (isAuth.loggedIn === false && isAuth.user === \"Login failed\") {\n        error = true;\n      }\n\n      return React.createElement(\"form\", {\n        action: \"###\",\n        onSubmit: this.handleSubmit\n      }, React.createElement(\"h3\", {\n        className: \"titleLogin\"\n      }, \"\\u0110\\u0103ng nh\\u1EADp\"), error ? React.createElement(\"div\", {\n        className: \"alert alert-warning alert-dismissible fade show\",\n        role: \"alert\"\n      }, React.createElement(\"strong\", null, \"L\\u1ED7i!\"), \" M\\xE3 \\u0111\\u0103ng nh\\u1EADp ho\\u1EB7c m\\u1EADt kh\\u1EA9u kh\\xF4ng \\u0111\\xFAng.\", React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close\",\n        \"data-dismiss\": \"alert\",\n        \"aria-label\": \"Close\"\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\"\n      }, \"\\xD7\"))) : '', React.createElement(\"input\", {\n        className: \"form-control \".concat(styles.uName, \" \").concat(styles.control),\n        id: \"UserName\",\n        name: \"username\",\n        placeholder: \"M\\xE3 \\u0111\\u0103ng nh\\u1EADp c\\xE1 nh\\xE2n\",\n        type: \"text\",\n        onChange: this.handleChange,\n        required: true\n      }), React.createElement(\"input\", {\n        autoComplete: \"off\",\n        className: \"form-control \".concat(styles.uPass, \" \").concat(styles.control),\n        id: \"Password\",\n        name: \"password\",\n        placeholder: \"M\\u1EADt kh\\u1EA9u\",\n        type: \"password\",\n        onChange: this.handleChange,\n        required: true\n      }), React.createElement(\"div\", {\n        className: \"\".concat(styles.captcha)\n      }, React.createElement(Recaptcha, {\n        ref: function ref(e) {\n          return recaptchaInstance = e;\n        },\n        sitekey: \"6Le4A58UAAAAAJ3NVFsfXkEo67Ny2AvZwhFeB3kx\",\n        render: \"explicit\",\n        onloadCallback: this.callback,\n        verifyCallback: this.verifyCallback\n      })), React.createElement(\"div\", {\n        className: \"form-group form-check\",\n        style: {\n          marginTop: 10,\n          fontSize: 13\n        }\n      }, React.createElement(\"label\", {\n        className: \"form-check-label\"\n      }, React.createElement(\"input\", {\n        className: \"form-check-input\",\n        style: {\n          marginTop: 0\n        },\n        type: \"checkbox\",\n        name: \"rememberMe\",\n        onChange: this.handleChange,\n        value: !this.state.rememberMe\n      }), \" L\\u01B0u t\\xE0i kho\\u1EA3n?\")), React.createElement(\"a\", {\n        href: \"#\",\n        style: {\n          color: '#666666'\n        }\n      }, React.createElement(\"small\", null, \"Qu\\xEAn m\\xE3 \\u0111\\u0103ng nh\\u1EADp?\")), React.createElement(\"div\", {\n        className: \"mgt\",\n        style: {\n          color: 'red'\n        }\n      }), React.createElement(\"button\", {\n        disabled: !isVerifyCaptcha,\n        type: \"submit\",\n        id: \"btn-dangnhap\",\n        className: \"btn btn-primary btn-block\",\n        value: \"\\u0110\\u0102NG NH\\u1EACP\",\n        style: {\n          marginTop: 15\n        }\n      }, \"\\u0110\\u0102NG NH\\u1EACP \", !isAuth.loggedIn && (isAuth.user === \"progress\" ? React.createElement(\"i\", {\n        class: \"fa fa-spinner fa-pulse fa-3x fa-fw\",\n        style: {\n          fontSize: 18\n        }\n      }) : React.createElement(\"i\", {\n        class: \"fa fa-chevron-circle-right\",\n        \"aria-hidden\": \"true\"\n      }))), React.createElement(\"br\", null));\n    }\n  }]);\n\n  return FormPanel;\n}(Component);\n\nFormPanel.PropTypes = {\n  isAuth: PropTypes.arrayOf(formLoginShape).isRequired,\n  login: PropTypes.func.isRequired\n};\nFormPanel.defaultProps = {\n  isAuth: {}\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuth: state.session.isAuthenticated\n  };\n};\n\nvar mapDispatchToProps = {\n  login: sessionOperations.login\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FormPanel);",{"version":3,"sources":["D:\\ManageEducation\\ManagerEducation\\Front-end\\src\\app\\scenes\\pages\\LoginPage\\Panel\\components\\FormPanel\\FormPanel.jsx"],"names":["React","Component","styles","Recaptcha","connect","PropTypes","formLoginShape","sessionOperations","recaptchaInstance","FormPanel","props","e","target","name","value","setState","rememberMe","JSON","parse","preventDefault","state","username","password","isVerifyCaptcha","login","resetRecaptcha","res","reset","isAuth","error","loggedIn","user","handleSubmit","uName","control","handleChange","uPass","captcha","callback","verifyCallback","marginTop","fontSize","color","arrayOf","isRequired","func","defaultProps","mapStateToProps","session","isAuthenticated","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport styles from './styles.css';\r\nimport Recaptcha from 'react-recaptcha';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { formLoginShape } from '../../../../../propTypes';\r\nimport { sessionOperations } from '../../../../../../state/ducks/session';\r\n\r\nlet recaptchaInstance;\r\nclass FormPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            rememberMe: false,\r\n            isVerifyCaptcha: false\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        if (name === \"rememberMe\") {\r\n            this.setState({ rememberMe: JSON.parse(value) })\r\n        } else {\r\n            this.setState({ [name]: value });\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { username, password, rememberMe, isVerifyCaptcha } = this.state;\r\n        // login if not errors\r\n        if (isVerifyCaptcha)\r\n            this.props.login(username, password, rememberMe);\r\n        this.resetRecaptcha();\r\n    }\r\n\r\n    // captcha config\r\n    callback = () => {\r\n    }\r\n\r\n    verifyCallback = (res) => {\r\n        if (res) {\r\n            this.setState({ isVerifyCaptcha: true })\r\n        }\r\n    }\r\n\r\n    resetRecaptcha = () => {\r\n        recaptchaInstance.reset();\r\n        this.setState({ isVerifyCaptcha: false });\r\n    }\r\n\r\n    render() {\r\n        const { isVerifyCaptcha } = this.state;\r\n        const { isAuth } = this.props;\r\n        let error = false;\r\n        if ((isAuth.loggedIn === false) && (isAuth.user === \"Login failed\")) {\r\n            error = true;\r\n        }\r\n        return (\r\n            <form action=\"###\" onSubmit={this.handleSubmit}>\r\n                <h3 className=\"titleLogin\">Đăng nhập</h3>\r\n                {error ? <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n                    <strong>Lỗi!</strong> Mã đăng nhập hoặc mật khẩu không đúng.\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div> : ''}\r\n                <input className={`form-control ${styles.uName} ${styles.control}`} id=\"UserName\" name=\"username\" placeholder=\"Mã đăng nhập cá nhân\" type=\"text\" onChange={this.handleChange} required />\r\n                <input autoComplete=\"off\" className={`form-control ${styles.uPass} ${styles.control}`} id=\"Password\" name=\"password\" placeholder=\"Mật khẩu\" type=\"password\" onChange={this.handleChange} required />\r\n                <div className={`${styles.captcha}`}>\r\n                    <Recaptcha\r\n                        ref={e => recaptchaInstance = e}\r\n                        sitekey=\"6Le4A58UAAAAAJ3NVFsfXkEo67Ny2AvZwhFeB3kx\"\r\n                        render=\"explicit\"\r\n                        onloadCallback={this.callback}\r\n                        verifyCallback={this.verifyCallback}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group form-check\" style={{ marginTop: 10, fontSize: 13 }}>\r\n                    <label className=\"form-check-label\">\r\n                        <input className=\"form-check-input\" style={{ marginTop: 0 }} type=\"checkbox\" name=\"rememberMe\" onChange={this.handleChange} value={!this.state.rememberMe} /> Lưu tài khoản?\r\n                    </label>\r\n                </div>\r\n                <a href=\"#\" style={{ color: '#666666' }}><small>Quên mã đăng nhập?</small></a>\r\n                <div className=\"mgt\" style={{ color: 'red' }}>\r\n                </div>\r\n                <button disabled={!isVerifyCaptcha} type=\"submit\" id=\"btn-dangnhap\" className={`btn btn-primary btn-block`} value=\"ĐĂNG NHẬP\" style={{ marginTop: 15 }}>ĐĂNG NHẬP {(!isAuth.loggedIn && (isAuth.user === \"progress\" ? <i class=\"fa fa-spinner fa-pulse fa-3x fa-fw\" style={{fontSize: 18}}></i> : <i class=\"fa fa-chevron-circle-right\" aria-hidden=\"true\"></i>))}</button><br />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nFormPanel.PropTypes = {\r\n    isAuth: PropTypes.arrayOf(formLoginShape).isRequired,\r\n    login: PropTypes.func.isRequired\r\n}\r\n\r\nFormPanel.defaultProps = {\r\n    isAuth: {}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.session.isAuthenticated\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    login: sessionOperations.login\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormPanel);\r\n"]}]}