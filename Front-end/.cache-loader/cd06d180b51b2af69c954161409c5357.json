{"remainingRequest":"e:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js!e:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\utils\\fetch.js","dependencies":[{"path":"e:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\utils\\fetch.js","mtime":1557328987679},{"path":"e:\\QuanLyDaoTao\\Front-end\\.babelrc","mtime":1559591694343},{"path":"e:\\QuanLyDaoTao\\Front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"e:\\QuanLyDaoTao\\Front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import isomorphicFetch from \"isomorphic-fetch\";\nexport default (function (url, method, body, header) {\n  var options = {\n    method: method,\n    headers: header ? header : requestHeaders(),\n    body: method !== \"GET\" ? body : null\n  };\n  return isomorphicFetch(url, options).then(function (res) {\n    return parseStatus(res.status, res.json());\n  });\n});\n\nfunction requestHeaders() {\n  var user = localStorage.getItem('user');\n\n  if (user) {\n    return {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": \"Bearer \" + user\n    };\n  } else {\n    return {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    };\n  }\n}\n\nfunction parseStatus(status, res) {\n  return new Promise(function (resolve, reject) {\n    if (status >= 200 && status < 300) {\n      res.then(function (response) {\n        return resolve(response);\n      });\n    } else if (status === 403 || status === 401) {\n      localStorage.removeItem('user');\n      res.then(function (response) {\n        return reject({\n          status: status,\n          response: response\n        });\n      });\n    } else {\n      res.then(function (response) {\n        return reject({\n          status: status,\n          response: response\n        });\n      });\n    }\n  });\n}",{"version":3,"sources":["e:\\QuanLyDaoTao\\Front-end\\src\\app\\state\\utils\\fetch.js"],"names":["isomorphicFetch","url","method","body","header","options","headers","requestHeaders","then","res","parseStatus","status","json","user","localStorage","getItem","Accept","Promise","resolve","reject","response","removeItem"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,kBAA5B;AAEA,gBAAe,UAACC,GAAD,EAAMC,MAAN,EAAcC,IAAd,EAAoBC,MAApB,EAAgC;AAC3C,MAAMC,OAAO,GAAG;AACZH,IAAAA,MAAM,EAANA,MADY;AAEZI,IAAAA,OAAO,EAAEF,MAAM,GAAGA,MAAH,GAAYG,cAAc,EAF7B;AAGZJ,IAAAA,IAAI,EAAED,MAAM,KAAK,KAAX,GAAmBC,IAAnB,GAA0B;AAHpB,GAAhB;AAKA,SAAOH,eAAe,CAACC,GAAD,EAAMI,OAAN,CAAf,CACFG,IADE,CACG,UAAAC,GAAG;AAAA,WAAIC,WAAW,CAACD,GAAG,CAACE,MAAL,EAAaF,GAAG,CAACG,IAAJ,EAAb,CAAf;AAAA,GADN,CAAP;AAEH,CARD;;AAWA,SAASL,cAAT,GAA0B;AACtB,MAAIM,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;;AACA,MAAIF,IAAJ,EAAU;AACN,WAAO;AACHG,MAAAA,MAAM,EAAE,kBADL;AAEH,sBAAgB,kBAFb;AAGH,uBAAiB,YAAYH;AAH1B,KAAP;AAKH,GAND,MAMO;AACH,WAAO;AACHG,MAAAA,MAAM,EAAE,kBADL;AAEH,sBAAgB;AAFb,KAAP;AAIH;AACJ;;AAED,SAASN,WAAT,CAAqBC,MAArB,EAA6BF,GAA7B,EAAkC;AAC9B,SAAO,IAAIQ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAIR,MAAM,IAAI,GAAV,IAAiBA,MAAM,GAAG,GAA9B,EAAmC;AAC/BF,MAAAA,GAAG,CAACD,IAAJ,CAAS,UAAAY,QAAQ;AAAA,eAAIF,OAAO,CAACE,QAAD,CAAX;AAAA,OAAjB;AACH,KAFD,MAEO,IAAGT,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAhC,EAAqC;AACxCG,MAAAA,YAAY,CAACO,UAAb,CAAwB,MAAxB;AACAZ,MAAAA,GAAG,CAACD,IAAJ,CAAS,UAAAY,QAAQ;AAAA,eAAID,MAAM,CAAC;AACxBR,UAAAA,MAAM,EAANA,MADwB;AAExBS,UAAAA,QAAQ,EAARA;AAFwB,SAAD,CAAV;AAAA,OAAjB;AAIH,KANM,MAMA;AACHX,MAAAA,GAAG,CAACD,IAAJ,CAAS,UAAAY,QAAQ;AAAA,eAAID,MAAM,CAAC;AACxBR,UAAAA,MAAM,EAANA,MADwB;AAExBS,UAAAA,QAAQ,EAARA;AAFwB,SAAD,CAAV;AAAA,OAAjB;AAIH;AACJ,GAfM,CAAP;AAgBH","sourcesContent":["import isomorphicFetch from \"isomorphic-fetch\";\n\nexport default (url, method, body, header ) => {\n    const options = {\n        method,\n        headers: header ? header : requestHeaders(),\n        body: method !== \"GET\" ? body : null,\n    }\n    return isomorphicFetch(url, options)\n        .then(res => parseStatus(res.status, res.json()));\n}\n\n\nfunction requestHeaders() {\n    let user = localStorage.getItem('user');\n    if (user) {\n        return { \n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"Bearer \" + user\n        };\n    } else {\n        return {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        };\n    }\n}\n\nfunction parseStatus(status, res) {\n    return new Promise((resolve, reject) => {\n        if (status >= 200 && status < 300) {\n            res.then(response => resolve(response));\n        } else if(status === 403 || status === 401) {\n            localStorage.removeItem('user');\n            res.then(response => reject({\n                status,\n                response\n            }));\n        } else {\n            res.then(response => reject({\n                status,\n                response\n            }));\n        }\n    });\n}"]}]}